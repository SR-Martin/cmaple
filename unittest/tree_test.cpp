#include "tree_test.h"

TEST_F(TreeTest, TestCalculateSubtreePlacementCost)
{
    Tree& tree = cmaple.tree;
    RealNumType *cumulative_rate = cmaple.cumulative_rate;
    double placementcost = 0;
    
    // replace from here
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_1_input1, test_1_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_2_input1, test_2_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_3_input1, test_3_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_4_input1, test_4_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_5_input1, test_5_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_6_input1, test_6_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_7_input1, test_7_input2, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_8_input1, test_8_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_9_input1, test_9_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_10_input1, test_10_input2, 0); EXPECT_LE(fabs(placementcost - (-0.0012712856712722893099548615580829391547013074159622)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_11_input1, test_11_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_12_input1, test_12_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_13_input1, test_13_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_14_input1, test_14_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_15_input1, test_15_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_16_input1, test_16_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_17_input1, test_17_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_18_input1, test_18_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_19_input1, test_19_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_20_input1, test_20_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_21_input1, test_21_input2, -1); EXPECT_LE(fabs(placementcost - (-0.00013381954434445151344394708825547013475443236529827)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_22_input1, test_22_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_23_input1, test_23_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_24_input1, test_24_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_25_input1, test_25_input2, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_26_input1, test_26_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_27_input1, test_27_input2, -1); EXPECT_LE(fabs(placementcost - (-10.30645017685062470036427839659154415130615234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_28_input1, test_28_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_29_input1, test_29_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_30_input1, test_30_input2, 0); EXPECT_LE(fabs(placementcost - (-0.00055758255404326530213499069077442982234060764312744)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_31_input1, test_31_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_32_input1, test_32_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_33_input1, test_33_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_34_input1, test_34_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_35_input1, test_35_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_36_input1, test_36_input2, 0); EXPECT_LE(fabs(placementcost - (-14.483048680249401840569589694496244192123413085938)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_37_input1, test_37_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_38_input1, test_38_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_39_input1, test_39_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_40_input1, test_40_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_41_input1, test_41_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_42_input1, test_42_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_43_input1, test_43_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_44_input1, test_44_input2, 0); EXPECT_LE(fabs(placementcost - (-0.00044327724064099568741098567059566448733676224946976)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_45_input1, test_45_input2, -1); EXPECT_LE(fabs(placementcost - (-32.1466917229272581835175515152513980865478515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_46_input1, test_46_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_47_input1, test_47_input2, -1); EXPECT_LE(fabs(placementcost - (-0.0036465825833863038836490932936840181355364620685577)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_48_input1, test_48_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_49_input1, test_49_input2, -1); EXPECT_LE(fabs(placementcost - (-0.0036465825833863038836490932936840181355364620685577)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_50_input1, test_50_input2, 0); EXPECT_LE(fabs(placementcost - (-0.0025760333177077625842199548600319758406840264797211)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_51_input1, test_51_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_52_input1, test_52_input2, 0); EXPECT_LE(fabs(placementcost - (-38.30538719571985240008871187455952167510986328125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_53_input1, test_53_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_54_input1, test_54_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_55_input1, test_55_input2, -1); EXPECT_LE(fabs(placementcost - (-4.3476279782821602992726184311322867870330810546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_56_input1, test_56_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_57_input1, test_57_input2, -1); EXPECT_LE(fabs(placementcost - (-2.2790938373629630042671578848967328667640686035156)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_58_input1, test_58_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_59_input1, test_59_input2, -1); EXPECT_LE(fabs(placementcost - (-0.00040145863303335456743689557690402125444961711764336)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_60_input1, test_60_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_61_input1, test_61_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_62_input1, test_62_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_63_input1, test_63_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_64_input1, test_64_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_65_input1, test_65_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_66_input1, test_66_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_67_input1, test_67_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_68_input1, test_68_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_69_input1, test_69_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_70_input1, test_70_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_71_input1, test_71_input2, -1); EXPECT_LE(fabs(placementcost - (-0.00035128461848667500789025752716554507060209289193153)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_72_input1, test_72_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_73_input1, test_73_input2, -1); EXPECT_LE(fabs(placementcost - (-12.50876175550607882769327261485159397125244140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_74_input1, test_74_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_75_input1, test_75_input2, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_76_input1, test_76_input2, 0); EXPECT_LE(fabs(placementcost - (-0.060739581968617187279768643293209606781601905822754)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_77_input1, test_77_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_78_input1, test_78_input2, 0); EXPECT_LE(fabs(placementcost - (-29.56719184578696513199247419834136962890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_79_input1, test_79_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_80_input1, test_80_input2, 0); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_81_input1, test_81_input2, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_82_input1, test_82_input2, 0); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_83_input1, test_83_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_84_input1, test_84_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_85_input1, test_85_input2, -1); EXPECT_LE(fabs(placementcost - (-0.060739581968617187279768643293209606781601905822754)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_86_input1, test_86_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_87_input1, test_87_input2, -1); EXPECT_LE(fabs(placementcost - (-0.00049346788435265483748620729542722074256744235754013)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_88_input1, test_88_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_89_input1, test_89_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_90_input1, test_90_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_91_input1, test_91_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_92_input1, test_92_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_93_input1, test_93_input2, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_94_input1, test_94_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_95_input1, test_95_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_96_input1, test_96_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_97_input1, test_97_input2, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_98_input1, test_98_input2, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_99_input1, test_99_input2, -1); EXPECT_LE(fabs(placementcost - (-0.00083637215215282196580093287963109105476178228855133)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_100_input1, test_100_input2, 0); EXPECT_LE(fabs(placementcost - (-0.69314718055994528622676398299518041312694549560547)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_101_input1, test_101_input2, 0.652975143982759); EXPECT_LE(fabs(placementcost - (-19443.2067654461061465553939342498779296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_102_input1, test_102_input2, 0.777489743343948); EXPECT_LE(fabs(placementcost - (-23239.9459182939608581364154815673828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_103_input1, test_103_input2, 0.157896949428143); EXPECT_LE(fabs(placementcost - (-4666.206364382538595236837863922119140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_104_input1, test_104_input2, 0.399797596240668); EXPECT_LE(fabs(placementcost - (-11909.619857943673196132294833660125732421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_105_input1, test_105_input2, 0.841492329014644); EXPECT_LE(fabs(placementcost - (-25082.37975529226605431176722049713134765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_106_input1, test_106_input2, 0.904108702359077); EXPECT_LE(fabs(placementcost - (-27024.7132222151631140150129795074462890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_107_input1, test_107_input2, 0.82192243459811); EXPECT_LE(fabs(placementcost - (-24568.0834925721064792014658451080322265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_108_input1, test_108_input2, 0.711778210868312); EXPECT_LE(fabs(placementcost - (-21018.04191101852848078124225139617919921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_109_input1, test_109_input2, 0.168908131625547); EXPECT_LE(fabs(placementcost - (-5038.872957016063082846812903881072998046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_110_input1, test_110_input2, 0.970933226622537); EXPECT_LE(fabs(placementcost - (-29026.9157673126974259503185749053955078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_111_input1, test_111_input2, 0.794680511153551); EXPECT_LE(fabs(placementcost - (-23754.32890578616570564918220043182373046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_112_input1, test_112_input2, 0.0535317223001154); EXPECT_LE(fabs(placementcost - (-1594.189048833498645763029344379901885986328125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_113_input1, test_113_input2, 0.706200087845502); EXPECT_LE(fabs(placementcost - (-21034.4160157953519956208765506744384765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_114_input1, test_114_input2, 0.747718458549011); EXPECT_LE(fabs(placementcost - (-22350.054184142543817870318889617919921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_115_input1, test_115_input2, 0.860888568306977); EXPECT_LE(fabs(placementcost - (-25628.5668177794650546275079250335693359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_116_input1, test_116_input2, 0.435137353139342); EXPECT_LE(fabs(placementcost - (-13006.69062268807101645506918430328369140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_117_input1, test_117_input2, 0.238345205385665); EXPECT_LE(fabs(placementcost - (-7036.85150678188438178040087223052978515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_118_input1, test_118_input2, 0.973041932155785); EXPECT_LE(fabs(placementcost - (-29027.578370431714574806392192840576171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_119_input1, test_119_input2, 0.247049818642164); EXPECT_LE(fabs(placementcost - (-7384.566129032924436614848673343658447265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_120_input1, test_120_input2, 0.31693711182672); EXPECT_LE(fabs(placementcost - (-9481.63705855358784901909530162811279296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_121_input1, test_121_input2, 0.110156286718972); EXPECT_LE(fabs(placementcost - (-3258.5312232315127403126098215579986572265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_122_input1, test_122_input2, 0.284860570869984); EXPECT_LE(fabs(placementcost - (-8484.647586527620660490356385707855224609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_123_input1, test_123_input2, 0.338049300368244); EXPECT_LE(fabs(placementcost - (-10104.63163730717860744334757328033447265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_124_input1, test_124_input2, 0.557785492921825); EXPECT_LE(fabs(placementcost - (-16670.544063576278858818113803863525390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_125_input1, test_125_input2, 0.352444161671686); EXPECT_LE(fabs(placementcost - (-10444.357097373265787609852850437164306640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_126_input1, test_126_input2, 0.564639281500659); EXPECT_LE(fabs(placementcost - (-16798.03104403489851392805576324462890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_127_input1, test_127_input2, 0.845581694416031); EXPECT_LE(fabs(placementcost - (-25193.9380425464842119254171848297119140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_128_input1, test_128_input2, 0.805784261821402); EXPECT_LE(fabs(placementcost - (-24002.616324405433260835707187652587890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_129_input1, test_129_input2, 0.213188663378705); EXPECT_LE(fabs(placementcost - (-6303.221947544667273177765309810638427734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_130_input1, test_130_input2, 0.18439190168175); EXPECT_LE(fabs(placementcost - (-5442.903579491290656733326613903045654296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_131_input1, test_131_input2, 0.06548811361018); EXPECT_LE(fabs(placementcost - (-1954.12601033784812898375093936920166015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_132_input1, test_132_input2, 0.132010460046942); EXPECT_LE(fabs(placementcost - (-3900.81956511572889212402515113353729248046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_133_input1, test_133_input2, 0.723753957026029); EXPECT_LE(fabs(placementcost - (-21342.72925505523380707018077373504638671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_134_input1, test_134_input2, 0.381636928906476); EXPECT_LE(fabs(placementcost - (-11367.601146814055027789436280727386474609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_135_input1, test_135_input2, 0.561522408136666); EXPECT_LE(fabs(placementcost - (-16558.725442204377031885087490081787109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_136_input1, test_136_input2, 0.964083300711858); EXPECT_LE(fabs(placementcost - (-28717.05362380697260960005223751068115234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_137_input1, test_137_input2, 0.146503647051818); EXPECT_LE(fabs(placementcost - (-4379.229758329805918037891387939453125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_138_input1, test_138_input2, 0.410709726341605); EXPECT_LE(fabs(placementcost - (-12276.524430076920907595194876194000244140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_139_input1, test_139_input2, 0.318306149582771); EXPECT_LE(fabs(placementcost - (-9432.06303530305376625619828701019287109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_140_input1, test_140_input2, 0.626344308441239); EXPECT_LE(fabs(placementcost - (-18723.93796966872832854278385639190673828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_141_input1, test_141_input2, 0.652154507666701); EXPECT_LE(fabs(placementcost - (-19492.89830106747467652894556522369384765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_142_input1, test_142_input2, 0.977574381028983); EXPECT_LE(fabs(placementcost - (-28842.641975488164462149143218994140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_143_input1, test_143_input2, 0.057041070950663); EXPECT_LE(fabs(placementcost - (-1705.0146517862676773802377283573150634765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_144_input1, test_144_input2, 0.410814896605606); EXPECT_LE(fabs(placementcost - (-12249.320130975023857899941504001617431640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_145_input1, test_145_input2, 0.356821532001371); EXPECT_LE(fabs(placementcost - (-10582.852355437937148963101208209991455078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_146_input1, test_146_input2, 0.407945293712104); EXPECT_LE(fabs(placementcost - (-12193.892774348494640435092151165008544921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_147_input1, test_147_input2, 0.193973147769014); EXPECT_LE(fabs(placementcost - (-5705.7431653885068953968584537506103515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_148_input1, test_148_input2, 0.693694743099799); EXPECT_LE(fabs(placementcost - (-20734.537142538654734380543231964111328125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_149_input1, test_149_input2, 0.606911276727416); EXPECT_LE(fabs(placementcost - (-18140.96222378312450018711388111114501953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_150_input1, test_150_input2, 0.680837359338801); EXPECT_LE(fabs(placementcost - (-20022.86727019236786873079836368560791015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_151_input1, test_151_input2, 0.620829297296119); EXPECT_LE(fabs(placementcost - (-18557.20852547829781542532145977020263671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_152_input1, test_152_input2, 0.918352507724548); EXPECT_LE(fabs(placementcost - (-27008.3597671665702364407479763031005859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_153_input1, test_153_input2, 0.0575346105767069); EXPECT_LE(fabs(placementcost - (-1724.034418785791558548226021230220794677734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_154_input1, test_154_input2, 0.396691547183054); EXPECT_LE(fabs(placementcost - (-11773.84487120531775872223079204559326171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_155_input1, test_155_input2, 0.32130487982699); EXPECT_LE(fabs(placementcost - (-9570.693298361644338001497089862823486328125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_156_input1, test_156_input2, 0.511383512851975); EXPECT_LE(fabs(placementcost - (-15275.7720096073462627828121185302734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_157_input1, test_157_input2, 0.172175379403036); EXPECT_LE(fabs(placementcost - (-5151.6973951997633776045404374599456787109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_158_input1, test_158_input2, 0.129812184568558); EXPECT_LE(fabs(placementcost - (-3872.08741424349136650562286376953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_159_input1, test_159_input2, 0.241600380362654); EXPECT_LE(fabs(placementcost - (-7167.17836218174852547235786914825439453125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_160_input1, test_160_input2, 0.565688537126442); EXPECT_LE(fabs(placementcost - (-16686.3245387299321009777486324310302734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_161_input1, test_161_input2, 0.0747707526849842); EXPECT_LE(fabs(placementcost - (-2234.897797754178100149147212505340576171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_162_input1, test_162_input2, 0.573834604794341); EXPECT_LE(fabs(placementcost - (-17152.42269445107740466482937335968017578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_163_input1, test_163_input2, 0.124777808344215); EXPECT_LE(fabs(placementcost - (-3672.52084292361132611404173076152801513671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_164_input1, test_164_input2, 0.354299507674647); EXPECT_LE(fabs(placementcost - (-10590.012351304976618848741054534912109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_165_input1, test_165_input2, 0.705621827194821); EXPECT_LE(fabs(placementcost - (-21063.55320806740564876236021518707275390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_166_input1, test_166_input2, 0.797339781909065); EXPECT_LE(fabs(placementcost - (-23832.4861481717161950655281543731689453125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_167_input1, test_167_input2, 0.988112851918463); EXPECT_LE(fabs(placementcost - (-29327.3858093035159981809556484222412109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_168_input1, test_168_input2, 0.569624974749586); EXPECT_LE(fabs(placementcost - (-17026.09049526511807925999164581298828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_169_input1, test_169_input2, 0.874614391921155); EXPECT_LE(fabs(placementcost - (-26051.36336243719779304228723049163818359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_170_input1, test_170_input2, 0.752092126996747); EXPECT_LE(fabs(placementcost - (-22480.78576805976990726776421070098876953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_171_input1, test_171_input2, 0.481432444485288); EXPECT_LE(fabs(placementcost - (-14388.956772646813988103531301021575927734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_172_input1, test_172_input2, 0.422947575696024); EXPECT_LE(fabs(placementcost - (-12623.09535657454762258566915988922119140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_173_input1, test_173_input2, 0.827164778259172); EXPECT_LE(fabs(placementcost - (-24674.78653433713407139293849468231201171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_174_input1, test_174_input2, 0.467036597869643); EXPECT_LE(fabs(placementcost - (-13960.19094692149883485399186611175537109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_175_input1, test_175_input2, 0.339600341191601); EXPECT_LE(fabs(placementcost - (-10117.79635296430569724179804325103759765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_176_input1, test_176_input2, 0.816749284781759); EXPECT_LE(fabs(placementcost - (-24355.7174028736117179505527019500732421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_177_input1, test_177_input2, 0.86813529539534); EXPECT_LE(fabs(placementcost - (-25888.9534289832590729929506778717041015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_178_input1, test_178_input2, 0.612779068643514); EXPECT_LE(fabs(placementcost - (-18248.29612090864611673168838024139404296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_179_input1, test_179_input2, 0.660780887948684); EXPECT_LE(fabs(placementcost - (-19755.747359718036022968590259552001953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_180_input1, test_180_input2, 0.288409193754982); EXPECT_LE(fabs(placementcost - (-8556.766084838223832775838673114776611328125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_181_input1, test_181_input2, 0.293057882307717); EXPECT_LE(fabs(placementcost - (-8759.79316005996588501147925853729248046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_182_input1, test_182_input2, 0.610402783925346); EXPECT_LE(fabs(placementcost - (-18115.8323691755140316672623157501220703125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_183_input1, test_183_input2, 0.240185500091628); EXPECT_LE(fabs(placementcost - (-7113.9912398397636934532783925533294677734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_184_input1, test_184_input2, 0.412053667925552); EXPECT_LE(fabs(placementcost - (-12218.644368957771803252398967742919921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_185_input1, test_185_input2, 0.981797031069874); EXPECT_LE(fabs(placementcost - (-29009.084469468580209650099277496337890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_186_input1, test_186_input2, 0.954972538753007); EXPECT_LE(fabs(placementcost - (-28423.41680823793285526335239410400390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_187_input1, test_187_input2, 0.0139604119523581); EXPECT_LE(fabs(placementcost - (-421.97675544354063958962797187268733978271484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_188_input1, test_188_input2, 0.163531959537002); EXPECT_LE(fabs(placementcost - (-4875.309877383790080784820020198822021484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_189_input1, test_189_input2, 0.733494978300924); EXPECT_LE(fabs(placementcost - (-21876.429284684752929024398326873779296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_190_input1, test_190_input2, 0.677250984481375); EXPECT_LE(fabs(placementcost - (-20213.3667064951951033435761928558349609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_191_input1, test_191_input2, 0.514432300246266); EXPECT_LE(fabs(placementcost - (-15327.594670984572076122276484966278076171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_192_input1, test_192_input2, 0.551178669386082); EXPECT_LE(fabs(placementcost - (-16475.28160661937363329343497753143310546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_193_input1, test_193_input2, 0.982669778087508); EXPECT_LE(fabs(placementcost - (-29301.51429233056842349469661712646484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_194_input1, test_194_input2, 0.520254749427876); EXPECT_LE(fabs(placementcost - (-15440.353701431382432929240167140960693359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_195_input1, test_195_input2, 0.214642988756076); EXPECT_LE(fabs(placementcost - (-6415.8935769078680095844902098178863525390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_196_input1, test_196_input2, 0.328447706824758); EXPECT_LE(fabs(placementcost - (-9688.704615588279921212233603000640869140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_197_input1, test_197_input2, 0.162331397723044); EXPECT_LE(fabs(placementcost - (-4847.854386596925905905663967132568359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_198_input1, test_198_input2, 0.756439820964484); EXPECT_LE(fabs(placementcost - (-22512.15241489185063983313739299774169921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_199_input1, test_199_input2, 0.462175308994036); EXPECT_LE(fabs(placementcost - (-13767.32154842609088518656790256500244140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_200_input1, test_200_input2, 0.685145271381765); EXPECT_LE(fabs(placementcost - (-20434.5641650952384225092828273773193359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_201_input1, test_201_input2, 0.0839089589873951); EXPECT_LE(fabs(placementcost - (-2493.4910841701048411778174340724945068359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_202_input1, test_202_input2, 0.434732356549075); EXPECT_LE(fabs(placementcost - (-12882.80933676278436905704438686370849609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_203_input1, test_203_input2, 0.191585214884387); EXPECT_LE(fabs(placementcost - (-5727.3860974804310899344272911548614501953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_204_input1, test_204_input2, 0.228200711052376); EXPECT_LE(fabs(placementcost - (-6803.8042000265922979451715946197509765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_205_input1, test_205_input2, 0.807712133162804); EXPECT_LE(fabs(placementcost - (-24083.9081242113243206404149532318115234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_206_input1, test_206_input2, 0.417768893529675); EXPECT_LE(fabs(placementcost - (-12493.23147055330264265649020671844482421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_207_input1, test_207_input2, 0.53262814269006); EXPECT_LE(fabs(placementcost - (-15893.75480550252905231900513172149658203125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_208_input1, test_208_input2, 0.881867547638901); EXPECT_LE(fabs(placementcost - (-26304.14825972156177158467471599578857421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_209_input1, test_209_input2, 0.840512708051668); EXPECT_LE(fabs(placementcost - (-25124.62904194686780101619660854339599609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_210_input1, test_210_input2, 0.319488722985952); EXPECT_LE(fabs(placementcost - (-9552.8066577904974110424518585205078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_211_input1, test_211_input2, 0.198442566275231); EXPECT_LE(fabs(placementcost - (-5931.6467485329276314587332308292388916015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_212_input1, test_212_input2, 0.0321918402805726); EXPECT_LE(fabs(placementcost - (-972.373542740239599879714660346508026123046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_213_input1, test_213_input2, 0.478852903742299); EXPECT_LE(fabs(placementcost - (-14262.07444755336837260983884334564208984375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_214_input1, test_214_input2, 0.398927553313338); EXPECT_LE(fabs(placementcost - (-11918.405482731928714201785624027252197265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_215_input1, test_215_input2, 0.616151104312601); EXPECT_LE(fabs(placementcost - (-18350.56276176424580626189708709716796875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_216_input1, test_216_input2, 0.516738926048224); EXPECT_LE(fabs(placementcost - (-15314.28342538633660296909511089324951171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_217_input1, test_217_input2, 0.559673357808395); EXPECT_LE(fabs(placementcost - (-16732.2933838901590206660330295562744140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_218_input1, test_218_input2, 0.0736898610527384); EXPECT_LE(fabs(placementcost - (-2202.6636367274031726992689073085784912109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_219_input1, test_219_input2, 0.118989195128525); EXPECT_LE(fabs(placementcost - (-3556.706031586740209604613482952117919921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_220_input1, test_220_input2, 0.303401849508914); EXPECT_LE(fabs(placementcost - (-9068.984683670953018008731305599212646484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_221_input1, test_221_input2, 0.431736508784507); EXPECT_LE(fabs(placementcost - (-12758.19454549227157258428633213043212890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_222_input1, test_222_input2, 0.824551756659963); EXPECT_LE(fabs(placementcost - (-24590.82583894704657723195850849151611328125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_223_input1, test_223_input2, 0.798317306377199); EXPECT_LE(fabs(placementcost - (-23862.50260492084998986683785915374755859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_224_input1, test_224_input2, 0.994029798385645); EXPECT_LE(fabs(placementcost - (-29311.17780616711752372793853282928466796875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_225_input1, test_225_input2, 0.447200363376039); EXPECT_LE(fabs(placementcost - (-13336.191154996355180628597736358642578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_226_input1, test_226_input2, 0.0227447518002802); EXPECT_LE(fabs(placementcost - (-689.581952836502523496164940297603607177734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_227_input1, test_227_input2, 0.961633756487766); EXPECT_LE(fabs(placementcost - (-28718.40660389413460507057607173919677734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_228_input1, test_228_input2, 0.185518853664624); EXPECT_LE(fabs(placementcost - (-5545.3440548892758670262992382049560546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_229_input1, test_229_input2, 0.753764930268369); EXPECT_LE(fabs(placementcost - (-22531.41505273337315884418785572052001953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_230_input1, test_230_input2, 0.264215163997582); EXPECT_LE(fabs(placementcost - (-7873.1867914106032912968657910823822021484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_231_input1, test_231_input2, 0.291085401607797); EXPECT_LE(fabs(placementcost - (-8684.82811002459129667840898036956787109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_232_input1, test_232_input2, 0.753591824337749); EXPECT_LE(fabs(placementcost - (-22483.05423479339879122562706470489501953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_233_input1, test_233_input2, 0.476151471097346); EXPECT_LE(fabs(placementcost - (-14221.152012927492251037620007991790771484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_234_input1, test_234_input2, 0.391754572990601); EXPECT_LE(fabs(placementcost - (-11651.32667361005223938263952732086181640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_235_input1, test_235_input2, 0.840947654076494); EXPECT_LE(fabs(placementcost - (-25029.9877460115312715061008930206298828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_236_input1, test_236_input2, 0.34066249891085); EXPECT_LE(fabs(placementcost - (-10097.4994683701588655821979045867919921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_237_input1, test_237_input2, 0.522679351286332); EXPECT_LE(fabs(placementcost - (-15585.43245871796898427419364452362060546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_238_input1, test_238_input2, 0.787221255042792); EXPECT_LE(fabs(placementcost - (-23299.7015381793098640628159046173095703125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_239_input1, test_239_input2, 0.578160984494898); EXPECT_LE(fabs(placementcost - (-17180.96974802195836673490703105926513671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_240_input1, test_240_input2, 0.457929973054824); EXPECT_LE(fabs(placementcost - (-13650.261195227425560005940496921539306640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_241_input1, test_241_input2, 0.722142983894372); EXPECT_LE(fabs(placementcost - (-21546.5600688983104191720485687255859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_242_input1, test_242_input2, 0.0533666714704844); EXPECT_LE(fabs(placementcost - (-1596.71085681523300081607885658740997314453125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_243_input1, test_243_input2, 0.939166193530525); EXPECT_LE(fabs(placementcost - (-28076.7867353601977811194956302642822265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_244_input1, test_244_input2, 0.889174405626712); EXPECT_LE(fabs(placementcost - (-26538.62814211846489342860877513885498046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_245_input1, test_245_input2, 0.878835987632912); EXPECT_LE(fabs(placementcost - (-26272.61765318220204790122807025909423828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_246_input1, test_246_input2, 0.699455606806456); EXPECT_LE(fabs(placementcost - (-20910.04885576296874205581843852996826171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_247_input1, test_247_input2, 0.55277223880836); EXPECT_LE(fabs(placementcost - (-16375.357907258125123917125165462493896484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_248_input1, test_248_input2, 0.680794516890803); EXPECT_LE(fabs(placementcost - (-20349.6289043829965521581470966339111328125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_249_input1, test_249_input2, 0.788885628522069); EXPECT_LE(fabs(placementcost - (-23582.22090391206438653171062469482421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_250_input1, test_250_input2, 0.685661321370478); EXPECT_LE(fabs(placementcost - (-20494.89023928948518005199730396270751953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_251_input1, test_251_input2, 0.477291938688047); EXPECT_LE(fabs(placementcost - (-14266.73333932441528304480016231536865234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_252_input1, test_252_input2, 0.735906676849209); EXPECT_LE(fabs(placementcost - (-21996.98650279086359660141170024871826171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_253_input1, test_253_input2, 0.575806161839137); EXPECT_LE(fabs(placementcost - (-17211.4219835336480173282325267791748046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_254_input1, test_254_input2, 0.611628226390223); EXPECT_LE(fabs(placementcost - (-18215.26719661739116418175399303436279296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_255_input1, test_255_input2, 0.747110664150619); EXPECT_LE(fabs(placementcost - (-22043.3960786844181711785495281219482421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_256_input1, test_256_input2, 0.899655097651589); EXPECT_LE(fabs(placementcost - (-26891.5905489948127069510519504547119140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_257_input1, test_257_input2, 0.954792432343598); EXPECT_LE(fabs(placementcost - (-28435.81830122382598347030580043792724609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_258_input1, test_258_input2, 0.116006673273397); EXPECT_LE(fabs(placementcost - (-3462.221672960988144041039049625396728515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_259_input1, test_259_input2, 0.946122312948563); EXPECT_LE(fabs(placementcost - (-28177.6226979978891904465854167938232421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_260_input1, test_260_input2, 0.43914383591878); EXPECT_LE(fabs(placementcost - (-13106.250292112434181035496294498443603515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_261_input1, test_261_input2, 0.791327309584459); EXPECT_LE(fabs(placementcost - (-23568.39259121183931711129844188690185546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_262_input1, test_262_input2, 0.137855194004542); EXPECT_LE(fabs(placementcost - (-4120.6296374446528716362081468105316162109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_263_input1, test_263_input2, 0.435999381696013); EXPECT_LE(fabs(placementcost - (-13035.182124911241771769709885120391845703125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_264_input1, test_264_input2, 0.521834969129584); EXPECT_LE(fabs(placementcost - (-15561.302290717654614127241075038909912109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_265_input1, test_265_input2, 0.101222437471027); EXPECT_LE(fabs(placementcost - (-3017.89445744588419984211213886737823486328125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_266_input1, test_266_input2, 0.645906011116752); EXPECT_LE(fabs(placementcost - (-19308.009501564447418786585330963134765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_267_input1, test_267_input2, 0.563498109413416); EXPECT_LE(fabs(placementcost - (-16660.36681217807563371025025844573974609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_268_input1, test_268_input2, 0.920575976541985); EXPECT_LE(fabs(placementcost - (-27509.3750880715888342820107936859130859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_269_input1, test_269_input2, 0.747045239653845); EXPECT_LE(fabs(placementcost - (-22330.55679137086190166883170604705810546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_270_input1, test_270_input2, 0.856411960974246); EXPECT_LE(fabs(placementcost - (-25560.012580818482092581689357757568359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_271_input1, test_271_input2, 0.650217764402106); EXPECT_LE(fabs(placementcost - (-19365.66430189783204696141183376312255859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_272_input1, test_272_input2, 0.941654493163133); EXPECT_LE(fabs(placementcost - (-28148.89419481539152911864221096038818359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_273_input1, test_273_input2, 0.856452885830303); EXPECT_LE(fabs(placementcost - (-25564.65930452206521295011043548583984375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_274_input1, test_274_input2, 0.760379253902038); EXPECT_LE(fabs(placementcost - (-22646.22711069713477627374231815338134765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_275_input1, test_275_input2, 0.697624192339358); EXPECT_LE(fabs(placementcost - (-20777.4047590746995410881936550140380859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_276_input1, test_276_input2, 0.335710388328258); EXPECT_LE(fabs(placementcost - (-10036.653976953819437767378985881805419921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_277_input1, test_277_input2, 0.862527103864262); EXPECT_LE(fabs(placementcost - (-25688.16618117606049054302275180816650390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_278_input1, test_278_input2, 0.526262056464379); EXPECT_LE(fabs(placementcost - (-15730.499129776753761689178645610809326171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_279_input1, test_279_input2, 0.573880332206418); EXPECT_LE(fabs(placementcost - (-17153.8571438015787862241268157958984375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_280_input1, test_280_input2, 0.399555192450794); EXPECT_LE(fabs(placementcost - (-11941.12472128034642082639038562774658203125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_281_input1, test_281_input2, 0.253873886992423); EXPECT_LE(fabs(placementcost - (-7588.544356090516885160468518733978271484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_282_input1, test_282_input2, 0.0651678241296555); EXPECT_LE(fabs(placementcost - (-1947.35272878250771100283600389957427978515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_283_input1, test_283_input2, 0.556340396951513); EXPECT_LE(fabs(placementcost - (-16629.57475295423864736221730709075927734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_284_input1, test_284_input2, 0.422136026561124); EXPECT_LE(fabs(placementcost - (-12573.59404698457001359201967716217041015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_285_input1, test_285_input2, 0.93212792399547); EXPECT_LE(fabs(placementcost - (-27862.95691454068219172768294811248779296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_286_input1, test_286_input2, 0.387198772006709); EXPECT_LE(fabs(placementcost - (-11574.8038136100440169684588909149169921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_287_input1, test_287_input2, 0.809985066986906); EXPECT_LE(fabs(placementcost - (-24110.514870621220325119793415069580078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_288_input1, test_288_input2, 0.861199582518749); EXPECT_LE(fabs(placementcost - (-25700.304783228915766812860965728759765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_289_input1, test_289_input2, 0.291513187987583); EXPECT_LE(fabs(placementcost - (-8713.620702136840918683446943759918212890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_290_input1, test_290_input2, 0.402842084059487); EXPECT_LE(fabs(placementcost - (-12042.562489481531883939169347286224365234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_291_input1, test_291_input2, 0.868834400302685); EXPECT_LE(fabs(placementcost - (-25970.69944007131198304705321788787841796875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_292_input1, test_292_input2, 0.0850965541627781); EXPECT_LE(fabs(placementcost - (-2546.75819873330101472674869000911712646484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_293_input1, test_293_input2, 0.161029177876059); EXPECT_LE(fabs(placementcost - (-4816.08690870544523932039737701416015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_294_input1, test_294_input2, 0.812210636235463); EXPECT_LE(fabs(placementcost - (-24278.28252493488253094255924224853515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_295_input1, test_295_input2, 0.649014962863806); EXPECT_LE(fabs(placementcost - (-19400.90438603631264413706958293914794921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_296_input1, test_296_input2, 0.416015218221154); EXPECT_LE(fabs(placementcost - (-12435.11088784851381205953657627105712890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_297_input1, test_297_input2, 0.945410898616449); EXPECT_LE(fabs(placementcost - (-28257.90733358890065574087202548980712890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_298_input1, test_298_input2, 0.225204641703696); EXPECT_LE(fabs(placementcost - (-6729.1182403243610679055564105510711669921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_299_input1, test_299_input2, 0.76535273200673); EXPECT_LE(fabs(placementcost - (-22868.74307821436013909988105297088623046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_300_input1, test_300_input2, 0.504245462621041); EXPECT_LE(fabs(placementcost - (-15074.96150762708202819339931011199951171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_301_input1, test_301_input2, 0.991349828506635); EXPECT_LE(fabs(placementcost - (-29639.01846398002453497610986232757568359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_302_input1, test_302_input2, 0.328682808880373); EXPECT_LE(fabs(placementcost - (-9771.321719931127518066205084323883056640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_303_input1, test_303_input2, 0.279907617975919); EXPECT_LE(fabs(placementcost - (-8366.76710619440927985124289989471435546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_304_input1, test_304_input2, 0.852232213721659); EXPECT_LE(fabs(placementcost - (-25236.70658903868388733826577663421630859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_305_input1, test_305_input2, 0.236733968134899); EXPECT_LE(fabs(placementcost - (-7052.4770016116008264361880719661712646484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_306_input1, test_306_input2, 0.898505866510297); EXPECT_LE(fabs(placementcost - (-26837.1874778609708300791680812835693359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_307_input1, test_307_input2, 0.579684481066491); EXPECT_LE(fabs(placementcost - (-17327.3488235584809444844722747802734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_308_input1, test_308_input2, 0.453464845371786); EXPECT_LE(fabs(placementcost - (-13554.517693008054266101680696010589599609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_309_input1, test_309_input2, 0.299242607886593); EXPECT_LE(fabs(placementcost - (-8944.660792338154351455159485340118408203125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_310_input1, test_310_input2, 0.0569869963669248); EXPECT_LE(fabs(placementcost - (-1684.282119334900698959245346486568450927734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_311_input1, test_311_input2, 0.161099972260429); EXPECT_LE(fabs(placementcost - (-4775.9943205816462068469263613224029541015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_312_input1, test_312_input2, 0.523550472089546); EXPECT_LE(fabs(placementcost - (-15593.602343427975938539020717144012451171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_313_input1, test_313_input2, 0.201291070158654); EXPECT_LE(fabs(placementcost - (-6016.7913781123270382522605359554290771484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_314_input1, test_314_input2, 0.737417504287491); EXPECT_LE(fabs(placementcost - (-22007.2798930981443845666944980621337890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_315_input1, test_315_input2, 0.181351515168138); EXPECT_LE(fabs(placementcost - (-5383.8580521398280325229279696941375732421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_316_input1, test_316_input2, 0.29524814638343); EXPECT_LE(fabs(placementcost - (-8825.514157913139570155180990695953369140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_317_input1, test_317_input2, 0.607663104332102); EXPECT_LE(fabs(placementcost - (-18132.4407909009096329100430011749267578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_318_input1, test_318_input2, 0.154898590994739); EXPECT_LE(fabs(placementcost - (-4603.9164452332288419711403548717498779296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_319_input1, test_319_input2, 0.966651002424784); EXPECT_LE(fabs(placementcost - (-28753.71414493216070695780217647552490234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_320_input1, test_320_input2, 0.68330542290081); EXPECT_LE(fabs(placementcost - (-20247.93192096429993398487567901611328125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_321_input1, test_321_input2, 0.852451529358262); EXPECT_LE(fabs(placementcost - (-25480.62866404780288576148450374603271484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_322_input1, test_322_input2, 0.298830283984791); EXPECT_LE(fabs(placementcost - (-8913.64023997357799089513719081878662109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_323_input1, test_323_input2, 0.760240836452811); EXPECT_LE(fabs(placementcost - (-22667.95327113506573368795216083526611328125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_324_input1, test_324_input2, 0.562498461457979); EXPECT_LE(fabs(placementcost - (-16768.0521036311329226009547710418701171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_325_input1, test_325_input2, 0.47059528208925); EXPECT_LE(fabs(placementcost - (-13957.826054755520090111531317234039306640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_326_input1, test_326_input2, 0.930086746184905); EXPECT_LE(fabs(placementcost - (-27573.55841455421250429935753345489501953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_327_input1, test_327_input2, 0.39644585243792); EXPECT_LE(fabs(placementcost - (-11759.22921256805420853197574615478515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_328_input1, test_328_input2, 0.221580994464685); EXPECT_LE(fabs(placementcost - (-6568.5369967424267088063061237335205078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_329_input1, test_329_input2, 0.112681273398979); EXPECT_LE(fabs(placementcost - (-3356.91124731964691818575374782085418701171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_330_input1, test_330_input2, 0.662564258218803); EXPECT_LE(fabs(placementcost - (-19804.7082424182372051291167736053466796875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_331_input1, test_331_input2, 0.819559659210346); EXPECT_LE(fabs(placementcost - (-24414.81876964374896488152444362640380859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_332_input1, test_332_input2, 0.129808689237081); EXPECT_LE(fabs(placementcost - (-3832.88606438394572251127101480960845947265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_333_input1, test_333_input2, 0.112365301803569); EXPECT_LE(fabs(placementcost - (-3358.8277761043200371204875409603118896484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_334_input1, test_334_input2, 0.774564981102706); EXPECT_LE(fabs(placementcost - (-22840.17709880500115104950964450836181640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_335_input1, test_335_input2, 0.412315933475146); EXPECT_LE(fabs(placementcost - (-12324.535567505592553061433136463165283203125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_336_input1, test_336_input2, 0.554820734041564); EXPECT_LE(fabs(placementcost - (-16369.454197467986887204460799694061279296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_337_input1, test_337_input2, 0.98413158989611); EXPECT_LE(fabs(placementcost - (-29416.67735358461868599988520145416259765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_338_input1, test_338_input2, 0.997138385397175); EXPECT_LE(fabs(placementcost - (-29700.07514514881768263876438140869140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_339_input1, test_339_input2, 0.451602055481083); EXPECT_LE(fabs(placementcost - (-13451.072981382623765966854989528656005859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_340_input1, test_340_input2, 0.0602400994548142); EXPECT_LE(fabs(placementcost - (-1805.441870144060658276430331170558929443359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_341_input1, test_341_input2, 0.521108938873175); EXPECT_LE(fabs(placementcost - (-15575.946182919205966754816472530364990234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_342_input1, test_342_input2, 0.29391612487843); EXPECT_LE(fabs(placementcost - (-8785.777833154448671848513185977935791015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_343_input1, test_343_input2, 0.242036945514744); EXPECT_LE(fabs(placementcost - (-7241.5520591018585037090815603733062744140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_344_input1, test_344_input2, 0.875252255721814); EXPECT_LE(fabs(placementcost - (-26166.519302859189338050782680511474609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_345_input1, test_345_input2, 0.503613807819372); EXPECT_LE(fabs(placementcost - (-15022.06798189493201789446175098419189453125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_346_input1, test_346_input2, 0.905048438562046); EXPECT_LE(fabs(placementcost - (-27054.22854370554341585375368595123291015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_347_input1, test_347_input2, 0.680322296014927); EXPECT_LE(fabs(placementcost - (-20337.82807849449091008864343166351318359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_348_input1, test_348_input2, 0.617940874949102); EXPECT_LE(fabs(placementcost - (-18470.8706931036067544482648372650146484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_349_input1, test_349_input2, 0.214670936604063); EXPECT_LE(fabs(placementcost - (-6416.7559529608979573822580277919769287109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_350_input1, test_350_input2, 0.532032138768501); EXPECT_LE(fabs(placementcost - (-15905.71978135479366756044328212738037109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_351_input1, test_351_input2, 0.648696457494133); EXPECT_LE(fabs(placementcost - (-19393.95542964950072928331792354583740234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_352_input1, test_352_input2, 0.709050529701811); EXPECT_LE(fabs(placementcost - (-21194.229383316836901940405368804931640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_353_input1, test_353_input2, 0.840709844432153); EXPECT_LE(fabs(placementcost - (-25088.89535603576587163843214511871337890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_354_input1, test_354_input2, 0.116406078107284); EXPECT_LE(fabs(placementcost - (-3473.07157166751812837901525199413299560546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_355_input1, test_355_input2, 0.364888897092651); EXPECT_LE(fabs(placementcost - (-10906.89402299643188598565757274627685546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_356_input1, test_356_input2, 0.556930760203722); EXPECT_LE(fabs(placementcost - (-16647.8055846556744654662907123565673828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_357_input1, test_357_input2, 0.650707914307629); EXPECT_LE(fabs(placementcost - (-19450.31026656934409402310848236083984375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_358_input1, test_358_input2, 0.536981829465757); EXPECT_LE(fabs(placementcost - (-16048.885395065519333002157509326934814453125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_359_input1, test_359_input2, 0.319758669464847); EXPECT_LE(fabs(placementcost - (-9548.645159921537924674339592456817626953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_360_input1, test_360_input2, 0.0466262307526292); EXPECT_LE(fabs(placementcost - (-1414.51734479400329291820526123046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_361_input1, test_361_input2, 0.581666690973093); EXPECT_LE(fabs(placementcost - (-17326.3738004274127888493239879608154296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_362_input1, test_362_input2, 0.0155632298062127); EXPECT_LE(fabs(placementcost - (-465.20050213750386092215194366872310638427734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_363_input1, test_363_input2, 0.562249674589178); EXPECT_LE(fabs(placementcost - (-16806.20502314511759323067963123321533203125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_364_input1, test_364_input2, 0.472481753484241); EXPECT_LE(fabs(placementcost - (-14072.8274689526078873313963413238525390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_365_input1, test_365_input2, 0.215024285307028); EXPECT_LE(fabs(placementcost - (-6426.056325752035263576544821262359619140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_366_input1, test_366_input2, 0.329215727371427); EXPECT_LE(fabs(placementcost - (-9842.467745457426644861698150634765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_367_input1, test_367_input2, 0.402586812963783); EXPECT_LE(fabs(placementcost - (-12033.722426300437291502021253108978271484375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_368_input1, test_368_input2, 0.307484347534538); EXPECT_LE(fabs(placementcost - (-9191.0146321548745618201792240142822265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_369_input1, test_369_input2, 0.889677933557748); EXPECT_LE(fabs(placementcost - (-26592.23541632606065832078456878662109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_370_input1, test_370_input2, 0.312331990345347); EXPECT_LE(fabs(placementcost - (-9303.821305348721580230630934238433837890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_371_input1, test_371_input2, 0.115296227247357); EXPECT_LE(fabs(placementcost - (-3451.6544128770519819227047264575958251953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_372_input1, test_372_input2, 0.150444767679862); EXPECT_LE(fabs(placementcost - (-4497.7111403055614573531784117221832275390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_373_input1, test_373_input2, 0.701939761726608); EXPECT_LE(fabs(placementcost - (-20935.37097836583780008368194103240966796875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_374_input1, test_374_input2, 0.771072331154144); EXPECT_LE(fabs(placementcost - (-23026.34959979720224509947001934051513671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_375_input1, test_375_input2, 0.210296907304556); EXPECT_LE(fabs(placementcost - (-6282.9646869344223887310363352298736572265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_376_input1, test_376_input2, 0.811053944255889); EXPECT_LE(fabs(placementcost - (-24137.1482852225235546939074993133544921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_377_input1, test_377_input2, 0.277212682391072); EXPECT_LE(fabs(placementcost - (-8276.071301193544059060513973236083984375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_378_input1, test_378_input2, 0.29085126898435); EXPECT_LE(fabs(placementcost - (-8687.74089532735160901211202144622802734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_379_input1, test_379_input2, 0.393401899942218); EXPECT_LE(fabs(placementcost - (-11759.176191172840844956226646900177001953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_380_input1, test_380_input2, 0.74382117163573); EXPECT_LE(fabs(placementcost - (-22233.55864136360833072103559970855712890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_381_input1, test_381_input2, 0.0997408313781609); EXPECT_LE(fabs(placementcost - (-2973.7854917051226948387920856475830078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_382_input1, test_382_input2, 0.754027557413776); EXPECT_LE(fabs(placementcost - (-22514.25460389231375302188098430633544921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_383_input1, test_383_input2, 0.961095406335054); EXPECT_LE(fabs(placementcost - (-28728.10279076110236928798258304595947265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_384_input1, test_384_input2, 0.0622307510005942); EXPECT_LE(fabs(placementcost - (-1860.139378158761928716558031737804412841796875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_385_input1, test_385_input2, 0.781530601680544); EXPECT_LE(fabs(placementcost - (-23337.6309314995523891411721706390380859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_386_input1, test_386_input2, 0.717564082990982); EXPECT_LE(fabs(placementcost - (-21442.962869163267896510660648345947265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_387_input1, test_387_input2, 0.0493397760452121); EXPECT_LE(fabs(placementcost - (-1477.294670153513152399682439863681793212890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_388_input1, test_388_input2, 0.15876916802244); EXPECT_LE(fabs(placementcost - (-4747.120425872248233645223081111907958984375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_389_input1, test_389_input2, 0.593687721584187); EXPECT_LE(fabs(placementcost - (-17685.21959805627193418331444263458251953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_390_input1, test_390_input2, 0.834628029882351); EXPECT_LE(fabs(placementcost - (-24947.4765665688391891308128833770751953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_391_input1, test_391_input2, 0.141115526807608); EXPECT_LE(fabs(placementcost - (-4211.4496388248162475065328180789947509765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_392_input1, test_392_input2, 0.932516624454133); EXPECT_LE(fabs(placementcost - (-27873.854421558484318666160106658935546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_393_input1, test_393_input2, 0.41857785195836); EXPECT_LE(fabs(placementcost - (-12467.636513840756379067897796630859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_394_input1, test_394_input2, 0.736027278286141); EXPECT_LE(fabs(placementcost - (-21975.4994936194634647108614444732666015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_395_input1, test_395_input2, 0.106637256553098); EXPECT_LE(fabs(placementcost - (-3187.49423562865240455721504986286163330078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_396_input1, test_396_input2, 0.0510608702747484); EXPECT_LE(fabs(placementcost - (-1529.26154421855835607857443392276763916015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_397_input1, test_397_input2, 0.810560658336951); EXPECT_LE(fabs(placementcost - (-24231.39321312863103230483829975128173828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_398_input1, test_398_input2, 0.256035238183153); EXPECT_LE(fabs(placementcost - (-7652.762339971353867440484464168548583984375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_399_input1, test_399_input2, 0.678350952720648); EXPECT_LE(fabs(placementcost - (-20259.75955483368670684285461902618408203125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_400_input1, test_400_input2, 0.466939143634848); EXPECT_LE(fabs(placementcost - (-13920.853651107581754331476986408233642578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_401_input1, test_401_input2, 0.292905859780674); EXPECT_LE(fabs(placementcost - (-8725.355926436192021355964243412017822265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_402_input1, test_402_input2, 0.202299976268355); EXPECT_LE(fabs(placementcost - (-6046.94859063739932025782763957977294921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_403_input1, test_403_input2, 0.857095791985056); EXPECT_LE(fabs(placementcost - (-25498.53415993816815898753702640533447265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_404_input1, test_404_input2, 0.734089355111112); EXPECT_LE(fabs(placementcost - (-21916.7904604944051243364810943603515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_405_input1, test_405_input2, 0.00795630328743802); EXPECT_LE(fabs(placementcost - (-243.5235318562662314434419386088848114013671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_406_input1, test_406_input2, 0.631122978030023); EXPECT_LE(fabs(placementcost - (-18856.21271584256101050414144992828369140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_407_input1, test_407_input2, 0.183959723649664); EXPECT_LE(fabs(placementcost - (-5496.9330583420514813042245805263519287109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_408_input1, test_408_input2, 0.463972005600395); EXPECT_LE(fabs(placementcost - (-13819.41684213536427705548703670501708984375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_409_input1, test_409_input2, 0.320872980596483); EXPECT_LE(fabs(placementcost - (-9582.219030910500805475749075412750244140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_410_input1, test_410_input2, 0.619442777536515); EXPECT_LE(fabs(placementcost - (-18449.2029050545897916890680789947509765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_411_input1, test_411_input2, 0.837199008856024); EXPECT_LE(fabs(placementcost - (-25018.9686165635139332152903079986572265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_412_input1, test_412_input2, 0.032973782868452); EXPECT_LE(fabs(placementcost - (-994.5747057160916710927267558872699737548828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_413_input1, test_413_input2, 0.296624325227008); EXPECT_LE(fabs(placementcost - (-8866.397705360495820059441030025482177734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_414_input1, test_414_input2, 0.42455336128668); EXPECT_LE(fabs(placementcost - (-12689.56509497788283624686300754547119140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_415_input1, test_415_input2, 0.353812755933365); EXPECT_LE(fabs(placementcost - (-10575.817087604213156737387180328369140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_416_input1, test_416_input2, 0.168054246441867); EXPECT_LE(fabs(placementcost - (-5007.7055940301206646836362779140472412109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_417_input1, test_417_input2, 0.690035928059316); EXPECT_LE(fabs(placementcost - (-20551.42959743625033297576010227203369140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_418_input1, test_418_input2, 0.751587464942741); EXPECT_LE(fabs(placementcost - (-22465.7009146034761215560138225555419921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_419_input1, test_419_input2, 0.358697040877391); EXPECT_LE(fabs(placementcost - (-10723.35435461191445938311517238616943359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_420_input1, test_420_input2, 0.992009092832758); EXPECT_LE(fabs(placementcost - (-29702.476414034477784298360347747802734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_421_input1, test_421_input2, 0.327426903394917); EXPECT_LE(fabs(placementcost - (-9788.3503914005050319246947765350341796875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_422_input1, test_422_input2, 0.29774725696201); EXPECT_LE(fabs(placementcost - (-8885.56102448870296939276158809661865234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_423_input1, test_423_input2, 0.296392143480771); EXPECT_LE(fabs(placementcost - (-8852.880480660356624866835772991180419921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_424_input1, test_424_input2, 0.652041640049113); EXPECT_LE(fabs(placementcost - (-19490.176662708036019466817378997802734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_425_input1, test_425_input2, 0.725962705479631); EXPECT_LE(fabs(placementcost - (-21699.751229491652338765561580657958984375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_426_input1, test_426_input2, 0.249961470870852); EXPECT_LE(fabs(placementcost - (-7476.068524415255524218082427978515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_427_input1, test_427_input2, 0.656947225018174); EXPECT_LE(fabs(placementcost - (-19629.33657772976948763243854045867919921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_428_input1, test_428_input2, 0.168748684268493); EXPECT_LE(fabs(placementcost - (-5045.5060223397958907298743724822998046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_429_input1, test_429_input2, 0.0390066774773784); EXPECT_LE(fabs(placementcost - (-1174.5542725065533886663615703582763671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_430_input1, test_430_input2, 0.00010036465825833862830669673815719988851924426853657); EXPECT_LE(fabs(placementcost - (-33.91212427515727512172816204838454723358154296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_431_input1, test_431_input2, 0.00010036465825833862830669673815719988851924426853657); EXPECT_LE(fabs(placementcost - (-13.305011616748922520514497591648250818252563476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_432_input1, test_432_input2, 0.00010036465825833862830669673815719988851924426853657); EXPECT_LE(fabs(placementcost - (-64.8246500089475858885634806938469409942626953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_433_input1, test_433_input2, 0.00010036465825833862830669673815719988851924426853657); EXPECT_LE(fabs(placementcost - (-2.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_434_input1, test_434_input2, 0.00010036465825833862830669673815719988851924426853657); EXPECT_LE(fabs(placementcost - (-13.304309064141113694290652347262948751449584960938)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_435_input1, test_435_input2, 0.00012545582282292330571216165679970799828879535198212); EXPECT_LE(fabs(placementcost - (-13.828656396370444525700804661028087139129638671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_436_input1, test_436_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-15.11593068289109709212425514124333858489990234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_437_input1, test_437_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-14.00732653335739286148964310996234416961669921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_438_input1, test_438_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-3.9999999999999991118215802998747676610946655273438)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_439_input1, test_439_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-14.0132145933085467959244851954281330108642578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_440_input1, test_440_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-14.009534555839076475081128592137247323989868164062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_441_input1, test_441_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-3.9999999999999991118215802998747676610946655273438)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_442_input1, test_442_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-3.9999999999999991118215802998747676610946655273438)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_443_input1, test_443_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-14.002509029760991765556354948785156011581420898438)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_444_input1, test_444_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-24.034993637455141168857153388671576976776123046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_445_input1, test_445_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-3.9999999999999991118215802998747676610946655273438)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_446_input1, test_446_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-3.9999999999999991118215802998747676610946655273438)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_447_input1, test_447_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-14.013883691030271094746240123640745878219604492188)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_448_input1, test_448_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-14.019203017917963194349795230664312839508056640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_449_input1, test_449_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-14.002910488394025634306672145612537860870361328125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_450_input1, test_450_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-3.9999999999999991118215802998747676610946655273438)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_451_input1, test_451_input2, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-34.04727149395328211767264292575418949127197265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_452_input1, test_452_input2, 0.00020072931651667725661339347631439977703848853707314); EXPECT_LE(fabs(placementcost - (-15.59008530534691772118094377219676971435546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_453_input1, test_453_input2, 0.00020072931651667725661339347631439977703848853707314); EXPECT_LE(fabs(placementcost - (-15.610158236998586289701052010059356689453125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_454_input1, test_454_input2, 0.00023418420260279014175064382641267002327367663383484); EXPECT_LE(fabs(placementcost - (-16.457780666133889013735824846662580966949462890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_455_input1, test_455_input2, 0.00026763908868890302688789417651094026950886473059654); EXPECT_LE(fabs(placementcost - (-7.9999999999999982236431605997495353221893310546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_456_input1, test_456_input2, 0.00026763908868890302688789417651094026950886473059654); EXPECT_LE(fabs(placementcost - (-7.9999999999999982236431605997495353221893310546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_457_input1, test_457_input2, 1.0454651901910274487808366269958604277690028538927e-06); EXPECT_LE(fabs(placementcost - (-29.770560304265973883275364642031490802764892578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_458_input1, test_458_input2, 1.2545582282292325150205303252448629791615530848503e-05); EXPECT_LE(fabs(placementcost - (-25.1431159451737329391107778064906597137451171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_459_input1, test_459_input2, 1.2545582282292328538337092269649986064905533567071e-05); EXPECT_LE(fabs(placementcost - (-12.759101882124854299149774305988103151321411132812)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_460_input1, test_460_input2, 1.2545582282292328538337092269649986064905533567071e-05); EXPECT_LE(fabs(placementcost - (-12.760996265049481479536552797071635723114013671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_461_input1, test_461_input2, 1.2545582282292328538337092269649986064905533567071e-05); EXPECT_LE(fabs(placementcost - (-12.75837423835248074510673177428543567657470703125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_462_input1, test_462_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.5965201743313315319028333760797977447509765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_463_input1, test_463_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59690490552132047241684631444513797760009765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_464_input1, test_464_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596536901774374683782298234291374683380126953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_465_input1, test_465_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_466_input1, test_466_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.694579273422622378575397306121885776519775390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_467_input1, test_467_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_468_input1, test_468_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596503446888288380023368517868220806121826171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_469_input1, test_469_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-2.00492027430986041736105107702314853668212890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_470_input1, test_470_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59655362921741783566176309250295162200927734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_471_input1, test_471_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59690490552132047241684631444513797760009765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_472_input1, test_472_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_473_input1, test_473_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_474_input1, test_474_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_475_input1, test_475_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_476_input1, test_476_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59641980967307262062604422681033611297607421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_477_input1, test_477_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.694411998992194412494427524507045745849609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_478_input1, test_478_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_479_input1, test_479_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.598979108458660647329452331177890300750732421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_480_input1, test_480_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.695599647448251090509074856527149677276611328125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_481_input1, test_481_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-3.3867559066420342972492107946891337633132934570312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_482_input1, test_482_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_483_input1, test_483_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.5965201743313315319028333760797977447509765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_484_input1, test_484_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596570356660460987541227950714528560638427734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_485_input1, test_485_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_486_input1, test_486_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_487_input1, test_487_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_488_input1, test_488_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.697807669929932927743720938451588153839111328125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_489_input1, test_489_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596369627343943164987649652175605297088623046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_490_input1, test_490_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596603811546545514943318266887217760086059570312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_491_input1, test_491_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.313922315373220683909494255203753709793090820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_492_input1, test_492_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596955087850449928055240889079868793487548828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_493_input1, test_493_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_494_input1, test_494_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597021997622622535573100321926176548004150390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_495_input1, test_495_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_496_input1, test_496_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_497_input1, test_497_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-36.7905139872474507001243182457983493804931640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_498_input1, test_498_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.8197270111943879555838066153228282928466796875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_499_input1, test_499_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596219080356556574429305328521877527236938476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_500_input1, test_500_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-36.78934306623443006856177817098796367645263671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_501_input1, test_501_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_502_input1, test_502_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59690490552132047241684631444513797760009765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_503_input1, test_503_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_504_input1, test_504_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_505_input1, test_505_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_506_input1, test_506_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_507_input1, test_507_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.694094177574374526784595218487083911895751953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_508_input1, test_508_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-14.506642565465057259643799625337123870849609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_509_input1, test_509_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.5965201743313315319028333760797977447509765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_510_input1, test_510_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.694094177574374526784595218487083911895751953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_511_input1, test_511_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_512_input1, test_512_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_513_input1, test_513_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_514_input1, test_514_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59703872506566568745256518013775348663330078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_515_input1, test_515_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596570356660460987541227950714528560638427734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_516_input1, test_516_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_517_input1, test_517_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596837995749149641255826281849294900894165039062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_518_input1, test_518_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.69384326592872724859262234531342983245849609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_519_input1, test_519_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_520_input1, test_520_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.5965201743313315319028333760797977447509765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_521_input1, test_521_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-26.956239640608973928692648769356310367584228515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_522_input1, test_522_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596536901774374683782298234291374683380126953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_523_input1, test_523_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.694094177574374526784595218487083911895751953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_524_input1, test_524_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597021997622622535573100321926176548004150390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_525_input1, test_525_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59648671944524522814390365965664386749267578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_526_input1, test_526_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6940774501313313749051303602755069732666015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_527_input1, test_527_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_528_input1, test_528_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597055452508708839332030038349330425262451171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_529_input1, test_529_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_530_input1, test_530_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59690490552132047241684631444513797760009765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_531_input1, test_531_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-36.79091544588047923980411724187433719635009765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_532_input1, test_532_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_533_input1, test_533_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_534_input1, test_534_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.69163524344704541135797626338899135589599609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_535_input1, test_535_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.691969792307904896233594627119600772857666015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_536_input1, test_536_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597992189319120015511543897446244955062866210938)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_537_input1, test_537_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.694094177574374526784595218487083911895751953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_538_input1, test_538_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59029756551931455987869412638247013092041015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_539_input1, test_539_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_540_input1, test_540_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_541_input1, test_541_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59641980967307262062604422681033611297607421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_542_input1, test_542_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_543_input1, test_543_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.5989958359017037992089171893894672393798828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_544_input1, test_544_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_545_input1, test_545_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_546_input1, test_546_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_547_input1, test_547_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_548_input1, test_548_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-33.07497324964168683436582796275615692138671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_549_input1, test_549_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59655362921741783566176309250295162200927734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_550_input1, test_550_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_551_input1, test_551_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6922876137257247819434269331395626068115234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_552_input1, test_552_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_553_input1, test_553_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.599012563344746951088382047601044178009033203125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_554_input1, test_554_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_555_input1, test_555_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595784166837436401920058415271341800689697265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_556_input1, test_556_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596955087850449928055240889079868793487548828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_557_input1, test_557_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597055452508708839332030038349330425262451171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_558_input1, test_558_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.693742901270471890029511996544897556304931640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_559_input1, test_559_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596469992002202076264438801445066928863525390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_560_input1, test_560_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59648671944524522814390365965664386749267578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_561_input1, test_561_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_562_input1, test_562_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.694411998992194412494427524507045745849609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_563_input1, test_563_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59690490552132047241684631444513797760009765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_564_input1, test_564_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6922876137257247819434269331395626068115234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_565_input1, test_565_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596670721318718122461177699733525514602661132812)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_566_input1, test_566_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-25.38656668466042987120090401731431484222412109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_567_input1, test_567_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59648671944524522814390365965664386749267578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_568_input1, test_568_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_569_input1, test_569_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_570_input1, test_570_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_571_input1, test_571_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_572_input1, test_572_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-36.78934306623443006856177817098796367645263671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_573_input1, test_573_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.69163524344704541135797626338899135589599609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_574_input1, test_574_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59029756551931455987869412638247013092041015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_575_input1, test_575_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59703872506566568745256518013775348663330078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_576_input1, test_576_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_577_input1, test_577_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_578_input1, test_578_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59690490552132047241684631444513797760009765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_579_input1, test_579_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_580_input1, test_580_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_581_input1, test_581_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597055452508708839332030038349330425262451171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_582_input1, test_582_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6922876137257247819434269331395626068115234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_583_input1, test_583_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59641980967307262062604422681033611297607421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_584_input1, test_584_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596587084103504139420692808926105499267578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_585_input1, test_585_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597055452508708839332030038349330425262451171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_586_input1, test_586_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.69411090501741767866406007669866085052490234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_587_input1, test_587_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596854723192192793135291140060871839523315429688)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_588_input1, test_588_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_589_input1, test_589_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59876165169909967289640917442739009857177734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_590_input1, test_590_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6922876137257247819434269331395626068115234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_591_input1, test_591_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_592_input1, test_592_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-2.0044017235755253736328995728399604558944702148438)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_593_input1, test_593_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.693324715194393093042890541255474090576171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_594_input1, test_594_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59029756551931455987869412638247013092041015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_595_input1, test_595_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-14.578826910474450784249711432494223117828369140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_596_input1, test_596_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.590966663241037082343609654344618320465087890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_597_input1, test_597_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596319445014813709349255077540874481201171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_598_input1, test_598_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596603811546545514943318266887217760086059570312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_599_input1, test_599_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_600_input1, test_600_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_601_input1, test_601_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-36.790580897019623307642177678644657135009765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_602_input1, test_602_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6922876137257247819434269331395626068115234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_603_input1, test_603_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59690490552132047241684631444513797760009765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_604_input1, test_604_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_605_input1, test_605_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-16.15542044690688072705597733147442340850830078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_606_input1, test_606_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6922876137257247819434269331395626068115234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_607_input1, test_607_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_608_input1, test_608_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.69375962871351504190897685475647449493408203125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_609_input1, test_609_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595215433773972790731932036578655242919921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_610_input1, test_610_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_611_input1, test_611_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_612_input1, test_612_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_613_input1, test_613_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.693408352409608852440214832313358783721923828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_614_input1, test_614_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_615_input1, test_615_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_616_input1, test_616_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_617_input1, test_617_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_618_input1, test_618_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.50570405924356820470677575940499082207679748535156)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_619_input1, test_619_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_620_input1, test_620_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.69411090501741767866406007669866085052490234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_621_input1, test_621_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597055452508708839332030038349330425262451171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_622_input1, test_622_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597055452508708839332030038349330425262451171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_623_input1, test_623_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596536901774374683782298234291374683380126953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_624_input1, test_624_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_625_input1, test_625_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_626_input1, test_626_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.69411090501741767866406007669866085052490234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_627_input1, test_627_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6935254445109109155964688397943973541259765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_628_input1, test_628_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-36.78934306623443006856177817098796367645263671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_629_input1, test_629_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59641980967307262062604422681033611297607421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_630_input1, test_630_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-2.00492027430986041736105107702314853668212890625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_631_input1, test_631_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_632_input1, test_632_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_633_input1, test_633_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_634_input1, test_634_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_635_input1, test_635_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_636_input1, test_636_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_637_input1, test_637_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_638_input1, test_638_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_639_input1, test_639_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_640_input1, test_640_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-22.767033085183985718913390883244574069976806640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_641_input1, test_641_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597005270179579383693635463714599609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_642_input1, test_642_input2, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_643_input1, test_643_input2, 2.0909303803820548975616732539917208555380057077855e-06); EXPECT_LE(fabs(placementcost - (-1.5666295543123869293822281179018318653106689453125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_644_input1, test_644_input2, 2.5091164564584657076674184539299972129811067134142e-05); EXPECT_LE(fabs(placementcost - (-0.74999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_645_input1, test_645_input2, 2.5091164564584657076674184539299972129811067134142e-05); EXPECT_LE(fabs(placementcost - (-12.441581980679023544666961242910474538803100585938)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_646_input1, test_646_input2, 2.8227560135157741752357299369613485851004952564836e-05); EXPECT_LE(fabs(placementcost - (-0.84375000000000022204460492503130808472633361816406)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_647_input1, test_647_input2, 3.1363955705730821345842730674124965162263833917677e-06); EXPECT_LE(fabs(placementcost - (-13.864767249567716334013312007300555706024169921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_648_input1, test_648_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_649_input1, test_649_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403155537011825160220723773818463087081909179688)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_650_input1, test_650_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403590450530945332729970687068998813629150390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_651_input1, test_651_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_652_input1, test_652_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_653_input1, test_653_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_654_input1, test_654_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4029548076953091140239848755300045013427734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_655_input1, test_655_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403456630986600117694251821376383304595947265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_656_input1, test_656_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-15.342743875653779284107258717995136976242065429688)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_657_input1, test_657_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_658_input1, test_658_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_659_input1, test_659_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.804136506428054786965731182135641574859619140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_660_input1, test_660_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-36.30973116364109642972834990359842777252197265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_661_input1, test_661_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-3.2808976093981572219604458950925618410110473632812)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_662_input1, test_662_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.810860938531362762660137377679347991943359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_663_input1, test_663_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_664_input1, test_664_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403021717467481721541844308376312255859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_665_input1, test_665_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_666_input1, test_666_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40312208212574063281863345764577388763427734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_667_input1, test_667_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.401348973163175415379555488470941781997680664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_668_input1, test_668_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_669_input1, test_669_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_670_input1, test_670_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-32.6197357535569807396313990466296672821044921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_671_input1, test_671_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_672_input1, test_672_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.396932928199808188196584524121135473251342773438)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_673_input1, test_673_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_674_input1, test_674_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403858089619633986444569018203765153884887695312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_675_input1, test_675_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_676_input1, test_676_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_677_input1, test_677_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40285444303705020274719572626054286956787109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_678_input1, test_678_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.803656528272620462871600466314703226089477539062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_679_input1, test_679_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402419529517931806594788213260471820831298828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_680_input1, test_680_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_681_input1, test_681_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_682_input1, test_682_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400211507036248193003302731085568666458129882812)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_683_input1, test_683_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403021717467481721541844308376312255859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_684_input1, test_684_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_685_input1, test_685_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_686_input1, test_686_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.398304578529339536885345296468585729598999023438)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_687_input1, test_687_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.210570622276321728350012563169002532958984375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_688_input1, test_688_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_689_input1, test_689_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4028209881509638989882660098373889923095703125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_690_input1, test_690_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-2.342051766256584954817299148999154567718505859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_691_input1, test_691_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400144597264075585485443298239260911941528320312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_692_input1, test_692_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.804136506428054786965731182135641574859619140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_693_input1, test_693_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_694_input1, test_694_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40312208212574063281863345764577388763427734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_695_input1, test_695_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_696_input1, test_696_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.806511803340168142995025846175849437713623046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_697_input1, test_697_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807783089011440580406997469253838062286376953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_698_input1, test_698_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403858089619633986444569018203765153884887695312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_699_input1, test_699_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403858089619633986444569018203765153884887695312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_700_input1, test_700_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_701_input1, test_701_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.804136506428054786965731182135641574859619140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_702_input1, test_702_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_703_input1, test_703_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40278753326487759522933629341423511505126953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_704_input1, test_704_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40175043179620928412987268529832363128662109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_705_input1, test_705_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400144597264075585485443298239260911941528320312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_706_input1, test_706_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.804136506428054786965731182135641574859619140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_707_input1, test_707_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-2.5049063347856392880430576042272150516510009765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_708_input1, test_708_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40285444303705020274719572626054286956787109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_709_input1, test_709_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_710_input1, test_710_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_711_input1, test_711_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403389721214429286533231788780540227890014648438)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_712_input1, test_712_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40285444303705020274719572626054286956787109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_713_input1, test_713_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_714_input1, test_714_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.404025364050065505239217600319534540176391601562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_715_input1, test_715_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403690815189204244006759836338460445404052734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_716_input1, test_716_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_717_input1, test_717_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_718_input1, test_718_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_719_input1, test_719_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_720_input1, test_720_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_721_input1, test_721_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_722_input1, test_722_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.63641279462751043638490955345332622528076171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_723_input1, test_723_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.401348973163175415379555488470941781997680664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_724_input1, test_724_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403021717467481721541844308376312255859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_725_input1, test_725_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.804136506428054786965731182135641574859619140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_726_input1, test_726_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_727_input1, test_727_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_728_input1, test_728_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_729_input1, test_729_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_730_input1, test_730_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.80741508526449479177244938910007476806640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_731_input1, test_731_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.502492681793855311411789443809539079666137695312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_732_input1, test_732_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_733_input1, test_733_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403820917910882926094018330331891775131225585938)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_734_input1, test_734_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.292550988280352086690072610508650541305541992188)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_735_input1, test_735_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_736_input1, test_736_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_737_input1, test_737_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.80724781083406327297780080698430538177490234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_738_input1, test_738_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_739_input1, test_739_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40298826258139541778291459195315837860107421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_740_input1, test_740_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4028209881509638989882660098373889923095703125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_741_input1, test_741_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.8035008635924185682597453705966472625732421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_742_input1, test_742_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_743_input1, test_743_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.810860938531362762660137377679347991943359375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_744_input1, test_744_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.80724781083406327297780080698430538177490234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_745_input1, test_745_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.401348973163175415379555488470941781997680664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_746_input1, test_746_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403556995644859028971040970645844936370849609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_747_input1, test_747_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-69.42114124455264345670002512633800506591796875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_748_input1, test_748_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402218800201413984041209914721548557281494140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_749_input1, test_749_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.806511803340168142995025846175849437713623046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_750_input1, test_750_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_751_input1, test_751_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403423176100515590292161505203694105148315429688)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_752_input1, test_752_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.404025364050065505239217600319534540176391601562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_753_input1, test_753_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_754_input1, test_754_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.474742849281430068231202312745153903961181640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_755_input1, test_755_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_756_input1, test_756_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403556995644859028971040970645844936370849609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_757_input1, test_757_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.407417318165141040253729443065822124481201171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_758_input1, test_758_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403657360303117940247830119915306568145751953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_759_input1, test_759_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_760_input1, test_760_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402754078378793067827245977241545915603637695312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_761_input1, test_761_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_762_input1, test_762_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.7892157145509060001131729222834110260009765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_763_input1, test_763_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402419529517931806594788213260471820831298828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_764_input1, test_764_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_765_input1, test_765_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_766_input1, test_766_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_767_input1, test_767_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_768_input1, test_768_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_769_input1, test_769_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403356266328342982774302072357386350631713867188)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_770_input1, test_770_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-33.0258395869033591907282243482768535614013671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_771_input1, test_771_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807783089011440580406997469253838062286376953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_772_input1, test_772_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_773_input1, test_773_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_774_input1, test_774_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807783089011440580406997469253838062286376953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_775_input1, test_775_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.09538828426747159028309397399425506591796875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_776_input1, test_776_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_777_input1, test_777_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_778_input1, test_778_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_779_input1, test_779_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_780_input1, test_780_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400412236352764239200041629374027252197265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_781_input1, test_781_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40175043179620928412987268529832363128662109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_782_input1, test_782_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_783_input1, test_783_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403456630986600117694251821376383304595947265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_784_input1, test_784_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-32.6197357535569807396313990466296672821044921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_785_input1, test_785_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_786_input1, test_786_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.806812897314944876825393293984234333038330078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_787_input1, test_787_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.789661779574371891499140474479645490646362304688)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_788_input1, test_788_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_789_input1, test_789_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4028209881509638989882660098373889923095703125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_790_input1, test_790_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_791_input1, test_791_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_792_input1, test_792_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403858089619633986444569018203765153884887695312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_793_input1, test_793_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.803032495187213868348408141173422336578369140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_794_input1, test_794_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.2080280509337768535260693170130252838134765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_795_input1, test_795_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_796_input1, test_796_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-24.4995809227479668379601207561790943145751953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_797_input1, test_797_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_798_input1, test_798_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4028209881509638989882660098373889923095703125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_799_input1, test_799_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-3.7258197535227197683127542404690757393836975097656)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_800_input1, test_800_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_801_input1, test_801_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_802_input1, test_802_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.401482792707520630415274354163557291030883789062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_803_input1, test_803_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402653713720534156550456827972084283828735351562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_804_input1, test_804_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402687168606620460309386544395238161087036132812)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_805_input1, test_805_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_806_input1, test_806_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403824634733547682685639301780611276626586914062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_807_input1, test_807_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_808_input1, test_808_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_809_input1, test_809_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_810_input1, test_810_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_811_input1, test_811_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.806812897314944876825393293984234333038330078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_812_input1, test_812_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-46.614963990073334798580617643892765045166015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_813_input1, test_813_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_814_input1, test_814_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-24.49954746786188053420119103975594043731689453125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_815_input1, test_815_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807716179239267972889138036407530307769775390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_816_input1, test_816_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_817_input1, test_817_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402754078378793067827245977241545915603637695312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_818_input1, test_818_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4028209881509638989882660098373889923095703125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_819_input1, test_819_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_820_input1, test_820_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402720623492706764068316260818392038345336914062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_821_input1, test_821_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_822_input1, test_822_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.08799475444244109212377225048840045928955078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_823_input1, test_823_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_824_input1, test_824_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_825_input1, test_825_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403155537011826936577563174068927764892578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_826_input1, test_826_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_827_input1, test_827_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_828_input1, test_828_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_829_input1, test_829_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40285444303705020274719572626054286956787109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_830_input1, test_830_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.808017273214044706719505484215915203094482421875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_831_input1, test_831_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_832_input1, test_832_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_833_input1, test_833_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_834_input1, test_834_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807749634125354276648067752830684185028076171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_835_input1, test_835_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.2080280509337768535260693170130252838134765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_836_input1, test_836_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.806712532656685965548604144714772701263427734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_837_input1, test_837_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40305517235356802530077402479946613311767578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_838_input1, test_838_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_839_input1, test_839_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403791179847461378926709585357457399368286132812)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_840_input1, test_840_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_841_input1, test_841_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4029548076953091140239848755300045013427734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_842_input1, test_842_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_843_input1, test_843_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-15.82314117177617163179093040525913238525390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_844_input1, test_844_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_845_input1, test_845_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.80741508526449479177244938910007476806640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_846_input1, test_846_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1.0009813450662843337113372399471700191497802734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_847_input1, test_847_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_848_input1, test_848_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40312208212574063281863345764577388763427734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_849_input1, test_849_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99876216921481375532465563082951121032238006591797)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_850_input1, test_850_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.992392225294276286717831681016832590103149414062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_851_input1, test_851_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.80704708151754545042422250844538211822509765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_852_input1, test_852_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.8007575629333558708822238259017467498779296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_853_input1, test_853_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400044232605816674208654148969799280166625976562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_854_input1, test_854_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-15.483283953473286231883321306668221950531005859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_855_input1, test_855_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_856_input1, test_856_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403389721214429286533231788780540227890014648438)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_857_input1, test_857_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.21060407716240803210894227959215641021728515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_858_input1, test_858_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_859_input1, test_859_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40312208212574063281863345764577388763427734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_860_input1, test_860_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_861_input1, test_861_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402720623492706764068316260818392038345336914062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_862_input1, test_862_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.613139433379187082095995720010250806808471679688)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_863_input1, test_863_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_864_input1, test_864_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_865_input1, test_865_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_866_input1, test_866_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_867_input1, test_867_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.404393367797011293873765680473297834396362304688)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_868_input1, test_868_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-15.448398628690517497830114734824746847152709960938)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_869_input1, test_869_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.401226637163933474994337302632629871368408203125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_870_input1, test_870_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_871_input1, test_871_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_872_input1, test_872_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_873_input1, test_873_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_874_input1, test_874_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4028209881509638989882660098373889923095703125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_875_input1, test_875_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_876_input1, test_876_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.811429671594826373848263756372034549713134765625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_877_input1, test_877_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_878_input1, test_878_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.09542173915355789404202369041740894317626953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_879_input1, test_879_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.407417318165141040253729443065822124481201171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_880_input1, test_880_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_881_input1, test_881_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807783089011440580406997469253838062286376953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_882_input1, test_882_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4032977202776919511961750686168670654296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_883_input1, test_883_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.7922265669813981503466493450105190277099609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_884_input1, test_884_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.804136506428054786965731182135641574859619140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_885_input1, test_885_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40285444303705020274719572626054286956787109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_886_input1, test_886_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403155537011825160220723773818463087081909179688)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_887_input1, test_887_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403155537011825160220723773818463087081909179688)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_888_input1, test_888_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.80741508526449479177244938910007476806640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_889_input1, test_889_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.806745987542772269307533861137926578521728515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_890_input1, test_890_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403423176100515590292161505203694105148315429688)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_891_input1, test_891_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403490085872686421453181537799537181854248046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_892_input1, test_892_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_893_input1, test_893_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402687168606620460309386544395238161087036132812)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_894_input1, test_894_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_895_input1, test_895_input2, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402218800201413984041209914721548557281494140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_896_input1, test_896_input2, 3.3454886086112885137250350098270246235188096761703e-05); EXPECT_LE(fabs(placementcost - (-12.403690815189204244006759836338460445404052734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_897_input1, test_897_input2, 3.3454886086112885137250350098270246235188096761703e-05); EXPECT_LE(fabs(placementcost - (-1.0000000000000002220446049250313080847263336181641)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_898_input1, test_898_input2, 3.3454886086112885137250350098270246235188096761703e-05); EXPECT_LE(fabs(placementcost - (-0.99635341741661376246952386281918734312057495117188)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_899_input1, test_899_input2, 3.3454886086112885137250350098270246235188096761703e-05); EXPECT_LE(fabs(placementcost - (-23.804136506428054786965731182135641574859619140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_900_input1, test_900_input2, 3.7636746846876989003143065826151314468006603419781e-05); EXPECT_LE(fabs(placementcost - (-37.75545146019205589027478708885610103607177734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_901_input1, test_901_input2, 4.1818607607641099645299359588435095247405115514994e-05); EXPECT_LE(fabs(placementcost - (-25.031171508968128591732238419353961944580078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_902_input1, test_902_input2, 4.1818607607641106421562937622837807793985120952129e-06); EXPECT_LE(fabs(placementcost - (-27.09159089887742055680064368061721324920654296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_903_input1, test_903_input2, 4.1818607607641106421562937622837807793985120952129e-06); EXPECT_LE(fabs(placementcost - (-51.3507506425211204259539954364299774169921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_904_input1, test_904_input2, 5.0182329129169314153348369078599944259622134268284e-05); EXPECT_LE(fabs(placementcost - (-12.498560255941901786513881233986467123031616210938)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_905_input1, test_905_input2, 5.0182329129169314153348369078599944259622134268284e-05); EXPECT_LE(fabs(placementcost - (-12.492939835079434729436798079404979944229125976562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_906_input1, test_906_input2, 5.854605065069753543766095660316750581841915845871e-05); EXPECT_LE(fabs(placementcost - (-12.819248472504829905460610461886972188949584960938)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_907_input1, test_907_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.708435976805832368086157657671719789505004882812)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_908_input1, test_908_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.710643999287515981677643139846622943878173828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_909_input1, test_909_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.70880398055277993307754513807594776153564453125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_910_input1, test_910_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.4199498031315869184254552237689495086669921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_911_input1, test_911_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_912_input1, test_912_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-3.4047127562801078326515380467753857374191284179688)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_913_input1, test_913_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-34.12959015583651734004888567142188549041748046875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_914_input1, test_914_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.710643999287515981677643139846622943878173828125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_915_input1, test_915_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_916_input1, test_916_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.41151917183788810916666989214718341827392578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_917_input1, test_917_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.42138836323329087463207542896270751953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_918_input1, test_918_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.708302157261488929407278192229568958282470703125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_919_input1, test_919_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.711012003034463546669030620250850915908813476562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_920_input1, test_920_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.710911638376204635392241470981389284133911132812)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_921_input1, test_921_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-5.2963155488708340001835495058912783861160278320312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_922_input1, test_922_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-15.746757412773954243334628699813038110733032226562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_923_input1, test_923_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-13.38577014887064109416314749978482723236083984375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_924_input1, test_924_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_925_input1, test_925_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.707030871590216491995306569151580333709716796875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_926_input1, test_926_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.418611607688145426209302968345582485198974609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_927_input1, test_927_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-3.504075539147361695313520613126456737518310546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_928_input1, test_928_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.708636706122348414282896555960178375244140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_929_input1, test_929_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-4.016241957805402051917553762905299663543701171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_930_input1, test_930_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.42138836323329087463207542896270751953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_931_input1, test_931_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.708569796350177583121876523364335298538208007812)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_932_input1, test_932_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.42142181811937717839100514538586139678955078125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_933_input1, test_933_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-34.09981530721987752485802047885954380035400390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_934_input1, test_934_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_935_input1, test_935_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-14.097317517399712727410587831400334835052490234375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_936_input1, test_936_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.41412865295260559150847257114946842193603515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_937_input1, test_937_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-14.069142943559743486048319027759134769439697265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_938_input1, test_938_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9927068348332268588052329505444504320621490478516)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_939_input1, test_939_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-13.565010561055997229118474933784455060958862304688)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_940_input1, test_940_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-14.395526730697570272354823828209191560745239257812)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_941_input1, test_941_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703462361600458052635076455771923065185546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_942_input1, test_942_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_943_input1, test_943_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.70756614976759379942450323142111301422119140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_944_input1, test_944_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-76.97290216048048705488326959311962127685546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_945_input1, test_945_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-17.150106227225723642959565040655434131622314453125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_946_input1, test_946_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-14.089667500487825790855822560843080282211303710938)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_947_input1, test_947_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_948_input1, test_948_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-35.636683228977545923044090159237384796142578125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_949_input1, test_949_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.710309450426654720445185375865548849105834960938)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_950_input1, test_950_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-108.9341373394203600355467642657458782196044921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_951_input1, test_951_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-34.09981530721987752485802047885954380035400390625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_952_input1, test_952_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-16.151438556533999957309788442216813564300537109375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_953_input1, test_953_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-48.56729210285504194644090603105723857879638671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_954_input1, test_954_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.42122108880285935583742684684693813323974609375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_955_input1, test_955_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-14.091540974108648143214850279036909341812133789062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_956_input1, test_956_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.40870896140665280427128891460597515106201171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_957_input1, test_957_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-24.101700020159764648042255430482327938079833984375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_958_input1, test_958_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.38910439816019248837619670666754245758056640625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_959_input1, test_959_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-4.24169056500381458363335696049034595489501953125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_960_input1, test_960_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.41412865295260559150847257114946842193603515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_961_input1, test_961_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.709774172249277413015988713596016168594360351562)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_962_input1, test_962_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-11.61328070422604952227629837580025196075439453125)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_963_input1, test_963_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-4.1429407621990943511036675772629678249359130859375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_964_input1, test_964_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.685552834722932047384347242768853902816772460938)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_965_input1, test_965_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-17.26405301457740648629624047316610813140869140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_966_input1, test_966_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.690506251061028919480122567620128393173217773438)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_967_input1, test_967_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-14.986699017255116217484101071022450923919677734375)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_968_input1, test_968_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-24.804326086105675130966119468212127685546875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_969_input1, test_969_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.710577089515343374159783707000315189361572265625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_970_input1, test_970_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_971_input1, test_971_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9974574286574551251760567538440227508544921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_972_input1, test_972_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.697128225308727422770971315912902355194091796875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_973_input1, test_973_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-36.20644452227059417737109470181167125701904296875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_974_input1, test_974_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_975_input1, test_975_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9974574286574551251760567538440227508544921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_976_input1, test_976_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_977_input1, test_977_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_978_input1, test_978_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_979_input1, test_979_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_980_input1, test_980_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_981_input1, test_981_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-2.0009869248448199918755108228651806712150573730469)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_982_input1, test_982_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-34.12351252118228472909322590567171573638916015625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_983_input1, test_983_input2, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_984_input1, test_984_input2, 7.5273493693753978006286131652302628936013206839561e-05); EXPECT_LE(fabs(placementcost - (-2.2417951891873810765787311538588255643844604492188)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_985_input1, test_985_input2, 7.5273493693753978006286131652302628936013206839561e-05); EXPECT_LE(fabs(placementcost - (-12.837198724161059004700291552580893039703369140625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_986_input1, test_986_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.040210996790175812520828912965953350067138671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_987_input1, test_987_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-0.24968775471132914622884868549590464681386947631836)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_988_input1, test_988_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.03929935114432936416051234118640422821044921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_989_input1, test_989_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.03929935114432936416051234118640422821044921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_990_input1, test_990_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.039583717676061169754575530532747507095336914062)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_991_input1, test_991_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-14.426374326303983863795110664796084165573120117188)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_992_input1, test_992_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.03929935114432936416051234118640422821044921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_993_input1, test_993_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.040185905625611084701631625648587942123413085938)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_994_input1, test_994_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.03929935114432936416051234118640422821044921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_995_input1, test_995_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.039934993979965582866498152725398540496826171875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_996_input1, test_996_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.040210996790175812520828912965953350067138671875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_997_input1, test_997_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-0.24999999999999994448884876874217297881841659545898)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_998_input1, test_998_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.03929935114432936416051234118640422821044921875)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_999_input1, test_999_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-3.4864483875376581778482432127930223941802978515625)), 1e-50);
    placementcost = tree.calculateSubTreePlacementCost(cumulative_rate, test_1000_input1, test_1000_input2, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-0.24999999999999994448884876874217297881841659545898)), 1e-50);
}

TEST_F(TreeTest, TestCalculateSamplePlacementCost)
{
    Tree& tree = cmaple.tree;
    RealNumType *cumulative_rate = cmaple.cumulative_rate;
    double placementcost = 0;
    
    // replace from here
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_1_input2, test_1_input1, 0.685661321370478); EXPECT_LE(fabs(placementcost - (-20495.8928795260508195497095584869384765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_2_input2, test_2_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-73.0823327150522601414195378310978412628173828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_3_input2, test_3_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_4_input2, test_4_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597055452508708839332030038349330425262451171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_5_input2, test_5_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.5963566243479618833589483983814716339111328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_6_input2, test_6_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.710710909059688589195502572692930698394775390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_7_input2, test_7_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99896289853133046765520930421189405024051666259766)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_8_input2, test_8_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-24.034993637455141168857153388671576976776123046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_9_input2, test_9_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-38.620632990370523884848807938396930694580078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_10_input2, test_10_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_11_input2, test_11_input1, 0.0736898610527384); EXPECT_LE(fabs(placementcost - (-2201.9487474126772212912328541278839111328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_12_input2, test_12_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_13_input2, test_13_input1, 0.652154507666701); EXPECT_LE(fabs(placementcost - (-19423.99163338854486937634646892547607421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_14_input2, test_14_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_15_input2, test_15_input1, 0.68330542290081); EXPECT_LE(fabs(placementcost - (-20329.8157569286486250348389148712158203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_16_input2, test_16_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.41412865295260559150847257114946842193603515625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_17_input2, test_17_input1, 0.711778210868312); EXPECT_LE(fabs(placementcost - (-21073.6626235319636180065572261810302734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_18_input2, test_18_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40305517235356802530077402479946613311767578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_19_input2, test_19_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-14.016158623284127315855585038661956787109375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_20_input2, test_20_input1, 0.650707914307629); EXPECT_LE(fabs(placementcost - (-19451.18786535349863697774708271026611328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_21_input2, test_21_input1, 0); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_22_input2, test_22_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.709707262477104805498129280749708414077758789062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_23_input2, test_23_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807716179239267972889138036407530307769775390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_24_input2, test_24_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.693926903143943007989946636371314525604248046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_25_input2, test_25_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49929744739219150684306214316166006028652191162109)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_26_input2, test_26_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_27_input2, test_27_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-10.843187148770471850411922787316143512725830078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_28_input2, test_28_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-14.017496818727570584428576694335788488388061523438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_29_input2, test_29_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_30_input2, test_30_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99996654511391380726337274609250016510486602783203)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_31_input2, test_31_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_32_input2, test_32_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.401728129284984802893632149789482355117797851562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_33_input2, test_33_input1, 0.0602400994548142); EXPECT_LE(fabs(placementcost - (-1808.332391271309688818291760981082916259765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_34_input2, test_34_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_35_input2, test_35_input1, 0.129812184568558); EXPECT_LE(fabs(placementcost - (-3880.26655206300756617565639317035675048828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_36_input2, test_36_input1, 0.736027278286141); EXPECT_LE(fabs(placementcost - (-21955.09812950840205303393304347991943359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_37_input2, test_37_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_38_input2, test_38_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-34.12483956201229062799029634334146976470947265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_39_input2, test_39_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.03957535395453959381484310142695903778076171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_40_input2, test_40_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_41_input2, test_41_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-25.617888085201752090824811602942645549774169921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_42_input2, test_42_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_43_input2, test_43_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.040169178182567932822166767437011003494262695312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_44_input2, test_44_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_45_input2, test_45_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-32.18684574874936998867269721813499927520751953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_46_input2, test_46_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59524888866005909449086175300180912017822265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_47_input2, test_47_input1, 0.214642988756076); EXPECT_LE(fabs(placementcost - (-6415.67893391911275102756917476654052734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_48_input2, test_48_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40435991291092676647167536430060863494873046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_49_input2, test_49_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_50_input2, test_50_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99886253387307200046763000500504858791828155517578)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_51_input2, test_51_input1, 0.735906676849209); EXPECT_LE(fabs(placementcost - (-21996.1840219238583813421428203582763671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_52_input2, test_52_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-38.02237724391051898464866098947823047637939453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_53_input2, test_53_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-34.12042351704892695352100417949259281158447265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_54_input2, test_54_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.590648841823218972990616748575121164321899414062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_55_input2, test_55_input1, 0.747718458549011); EXPECT_LE(fabs(placementcost - (-22292.49515296183017198927700519561767578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_56_input2, test_56_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.6896789383351205060534994117915630340576171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_57_input2, test_57_input1, 0.798317306377199); EXPECT_LE(fabs(placementcost - (-23844.93962418054798035882413387298583984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_58_input2, test_58_input1, 2.0909303803820548975616732539917208555380057077855e-06); EXPECT_LE(fabs(placementcost - (-14.238978175815121929304041259456425905227661132812)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_59_input2, test_59_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9985948947843830136861242863233201205730438232422)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_60_input2, test_60_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.396531469566776095803106727544218301773071289062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_61_input2, test_61_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_62_input2, test_62_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.20735895321205788377483258955180644989013671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_63_input2, test_63_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_64_input2, test_64_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-15.793182376270495481662692327518016099929809570312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_65_input2, test_65_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40298083811001816911812056787312030792236328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_66_input2, test_66_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_67_input2, test_67_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59641980967307262062604422681033611297607421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_68_input2, test_68_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.591886672608405106643658655229955911636352539062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_69_input2, test_69_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595750711951350098161128698848187923431396484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_70_input2, test_70_input1, 0.303401849508914); EXPECT_LE(fabs(placementcost - (-8989.08582852295148768462240695953369140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_71_input2, test_71_input1, 0.899655097651589); EXPECT_LE(fabs(placementcost - (-26891.59052390364740858785808086395263671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_72_input2, test_72_input1, 0.581666690973093); EXPECT_LE(fabs(placementcost - (-17359.73786199893584125675261020660400390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_73_input2, test_73_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.315360875474924640116114460397511720657348632812)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_74_input2, test_74_input1, 0.299242607886593); EXPECT_LE(fabs(placementcost - (-8946.666662655918116797693073749542236328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_75_input2, test_75_input1, 0.889677933557748); EXPECT_LE(fabs(placementcost - (-26593.36311197465329314582049846649169921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_76_input2, test_76_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_77_input2, test_77_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59345905225445250152915832586586475372314453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_78_input2, test_78_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-28.369749771242229741119444952346384525299072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_79_input2, test_79_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.210570622276321728350012563169002532958984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_80_input2, test_80_input1, 0.256035238183153); EXPECT_LE(fabs(placementcost - (-7653.1493045326269566430710256099700927734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_81_input2, test_81_input1, 0); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_82_input2, test_82_input1, 0.875252255721814); EXPECT_LE(fabs(placementcost - (-26162.16517578074490302242338657379150390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_83_input2, test_83_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.710710909059688589195502572692930698394775390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_84_input2, test_84_input1, 0.312331990345347); EXPECT_LE(fabs(placementcost - (-9339.507076866180796059779822826385498046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_85_input2, test_85_input1, 0.00010036465825833862830669673815719988851924426853657); EXPECT_LE(fabs(placementcost - (-3.0000000000000013322676295501878485083580017089844)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_86_input2, test_86_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.592555770330125852751734782941639423370361328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_87_input2, test_87_input1, 0.556930760203722); EXPECT_LE(fabs(placementcost - (-16647.2173532494562095962464809417724609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_88_input2, test_88_input1, 0.807712133162804); EXPECT_LE(fabs(placementcost - (-24080.8262756929543684236705303192138671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_89_input2, test_89_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.705625766374598839547616080380976200103759765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_90_input2, test_90_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.710710909059688589195502572692930698394775390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_91_input2, test_91_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_92_input2, test_92_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-55.54953995896810425847434089519083499908447265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_93_input2, test_93_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.5)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_94_input2, test_94_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.390375770526931731296826910693198442459106445312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_95_input2, test_95_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-58.007280143993256160683813504874706268310546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_96_input2, test_96_input1, 0.977574381028983); EXPECT_LE(fabs(placementcost - (-29118.46166974287552875466644763946533203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_97_input2, test_97_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-24.824114068860890114365247427485883235931396484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_98_input2, test_98_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_99_input2, test_99_input1, 0.556340396951513); EXPECT_LE(fabs(placementcost - (-16617.888225674760178662836551666259765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_100_input2, test_100_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1.6815271837080900674266104033449664711952209472656)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_101_input2, test_101_input1, 0.193973147769014); EXPECT_LE(fabs(placementcost - (-5778.0951495063500260584987699985504150390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_102_input2, test_102_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.5)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_103_input2, test_103_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-38.863833284960065839186427183449268341064453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_104_input2, test_104_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-36.78925942901921786187813268043100833892822265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_105_input2, test_105_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.692689072358756874336904729716479778289794921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_106_input2, test_106_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_107_input2, test_107_input1, 0.781530601680544); EXPECT_LE(fabs(placementcost - (-23360.73121483315117075107991695404052734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_108_input2, test_108_input1, 0.0622307510005942); EXPECT_LE(fabs(placementcost - (-1845.051729143539660071837715804576873779296875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_109_input2, test_109_input1, 0.511383512851975); EXPECT_LE(fabs(placementcost - (-15248.66868342619272880256175994873046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_110_input2, test_110_input1, 0.32130487982699); EXPECT_LE(fabs(placementcost - (-9609.840998998146460507996380329132080078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_111_input2, test_111_input1, 0.819559659210346); EXPECT_LE(fabs(placementcost - (-24497.93581416982851806096732616424560546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_112_input2, test_112_input1, 0.677250984481375); EXPECT_LE(fabs(placementcost - (-20119.231964411577791906893253326416015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_113_input2, test_113_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-13.000926809298006148196691356133669614791870117188)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_114_input2, test_114_input1, 0.905048438562046); EXPECT_LE(fabs(placementcost - (-27052.80327851675610872916877269744873046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_115_input2, test_115_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.413258825914365246489978744648396968841552734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_116_input2, test_116_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_117_input2, test_117_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-38.863833284960065839186427183449268341064453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_118_input2, test_118_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-55.54953995896810425847434089519083499908447265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_119_input2, test_119_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_120_input2, test_120_input1, 0.852451529358262); EXPECT_LE(fabs(placementcost - (-25485.581102296055178157985210418701171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_121_input2, test_121_input1, 0.981797031069874); EXPECT_LE(fabs(placementcost - (-29009.084469468580209650099277496337890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_122_input2, test_122_input1, 0.559673357808395); EXPECT_LE(fabs(placementcost - (-16667.07258970430484623648226261138916015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_123_input2, test_123_input1, 0.561522408136666); EXPECT_LE(fabs(placementcost - (-16784.4663016130871255882084369659423828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_124_input2, test_124_input1, 0.988112851918463); EXPECT_LE(fabs(placementcost - (-29529.8750373851871700026094913482666015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_125_input2, test_125_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.395126364351158443355416238773614168167114257812)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_126_input2, test_126_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-13.287788305518287046425029984675347805023193359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_127_input2, test_127_input1, 0.319488722985952); EXPECT_LE(fabs(placementcost - (-9519.460188578892484656535089015960693359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_128_input2, test_128_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-36.78940997600660267607963760383427143096923828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_129_input2, test_129_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.037400786358942283982287335675209760665893554688)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_130_input2, test_130_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.390944503590395342484953289385885000228881835938)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_131_input2, test_131_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_132_input2, test_132_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.7948360480961156326884520240128040313720703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_133_input2, test_133_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.794267315032652021500325645320117473602294921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_134_input2, test_134_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.713286935288319767778375535272061824798583984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_135_input2, test_135_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.3903757705269299549399875104427337646484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_136_input2, test_136_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-3.9854359909573289222350922500481829047203063964844)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_137_input2, test_137_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_138_input2, test_138_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_139_input2, test_139_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.395025999692901308435466489754617214202880859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_140_input2, test_140_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.42142181811937717839100514538586139678955078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_141_input2, test_141_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99996654511391391828567520860815420746803283691406)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_142_input2, test_142_input1, 0.00026763908868890302688789417651094026950886473059654); EXPECT_LE(fabs(placementcost - (-26.544855309923956809825540403835475444793701171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_143_input2, test_143_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-2)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_144_input2, test_144_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595761863968673921476693067234009504318237304688)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_145_input2, test_145_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-13.286199198429196499660065455827862024307250976562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_146_input2, test_146_input1, 0.31693711182672); EXPECT_LE(fabs(placementcost - (-9473.56720961249084211885929107666015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_147_input2, test_147_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.387532105209611898999355616979300975799560546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_148_input2, test_148_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99996654511391380726337274609250016510486602783203)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_149_input2, test_149_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403824634733547682685639301780611276626586914062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_150_input2, test_150_input1, 0.391754572990601); EXPECT_LE(fabs(placementcost - (-11522.36245994785349466837942600250244140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_151_input2, test_151_input1, 0.837199008856024); EXPECT_LE(fabs(placementcost - (-25024.7155737154171220026910305023193359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_152_input2, test_152_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.791657833917934539158522966317832469940185546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_153_input2, test_153_input1, 0.41857785195836); EXPECT_LE(fabs(placementcost - (-12462.36681043534554191865026950836181640625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_154_input2, test_154_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.39669874399720583824091590940952301025390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_155_input2, test_155_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400211507036248193003302731085568666458129882812)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_156_input2, test_156_input1, 5.0182329129169314153348369078599944259622134268284e-05); EXPECT_LE(fabs(placementcost - (-12.497305697713672500981374469120055437088012695312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_157_input2, test_157_input1, 0.578160984494898); EXPECT_LE(fabs(placementcost - (-17283.37248269580959458835422992706298828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_158_input2, test_158_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6922876137257247819434269331395626068115234375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_159_input2, test_159_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-13.986049225806624463075422681868076324462890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_160_input2, test_160_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_161_input2, test_161_input1, 0.0227447518002802); EXPECT_LE(fabs(placementcost - (-679.840631310375101747922599315643310546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_162_input2, test_162_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_163_input2, test_163_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-13.952861978809201204398959816899150609970092773438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_164_input2, test_164_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49998327255695695914283760430407710373401641845703)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_165_input2, test_165_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402519894176190717871577362529933452606201171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_166_input2, test_166_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99996654511391391828567520860815420746803283691406)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_167_input2, test_167_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-59.398603890152202211538678966462612152099609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_168_input2, test_168_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99996654511391391828567520860815420746803283691406)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_169_input2, test_169_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-13.1091040333473785040041548199951648712158203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_170_input2, test_170_input1, 0.504245462621041); EXPECT_LE(fabs(placementcost - (-15072.40112320553816971369087696075439453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_171_input2, test_171_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596955087850449928055240889079868793487548828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_172_input2, test_172_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-14.571389646355104474650943302549421787261962890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_173_input2, test_173_input1, 0.723753957026029); EXPECT_LE(fabs(placementcost - (-21590.2787002008190029300749301910400390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_174_input2, test_174_input1, 0.335710388328258); EXPECT_LE(fabs(placementcost - (-10034.719217519961603102274239063262939453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_175_input2, test_175_input1, 0.320872980596483); EXPECT_LE(fabs(placementcost - (-9560.3780909453998901881277561187744140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_176_input2, test_176_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99749088354354142893498647026717662811279296875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_177_input2, test_177_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.498745441771770714467493235133588314056396484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_178_input2, test_178_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-14.08926604185479192210550536401569843292236328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_179_input2, test_179_input1, 0.137855194004542); EXPECT_LE(fabs(placementcost - (-4123.964762894933301140554249286651611328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_180_input2, test_180_input1, 0.225204641703696); EXPECT_LE(fabs(placementcost - (-6682.1590309917437480180524289608001708984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_181_input2, test_181_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.5)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_182_input2, test_182_input1, 0.930086746184905); EXPECT_LE(fabs(placementcost - (-27599.63530826615533442236483097076416015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_183_input2, test_183_input1, 0.247049818642164); EXPECT_LE(fabs(placementcost - (-7317.1646819292209329432807862758636474609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_184_input2, test_184_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-50.76561717294814712886363849975168704986572265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_185_input2, test_185_input1, 0.55277223880836); EXPECT_LE(fabs(placementcost - (-16333.947272865139893838204443454742431640625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_186_input2, test_186_input1, 0.398927553313338); EXPECT_LE(fabs(placementcost - (-11878.13674981860458501614630222320556640625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_187_input2, test_187_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.70749923999542119190664379857480525970458984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_188_input2, test_188_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.41392792363608776895489427261054515838623046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_189_input2, test_189_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_190_input2, test_190_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_191_input2, test_191_input1, 0.939166193530525); EXPECT_LE(fabs(placementcost - (-27982.2553468060868908651173114776611328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_192_input2, test_192_input1, 0.701939761726608); EXPECT_LE(fabs(placementcost - (-20981.6814177700362051837146282196044921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_193_input2, test_193_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.805340882327154616859843372367322444915771484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_194_input2, test_194_input1, 0.751587464942741); EXPECT_LE(fabs(placementcost - (-22300.51251826816223911009728908538818359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_195_input2, test_195_input1, 0.734089355111112); EXPECT_LE(fabs(placementcost - (-21942.6649136262494721449911594390869140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_196_input2, test_196_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.39439027016180006057766149751842021942138671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_197_input2, test_197_input1, 0.878835987632912); EXPECT_LE(fabs(placementcost - (-26216.3753776687080971896648406982421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_198_input2, test_198_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-13.287989034834803092621768882963806390762329101562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_199_input2, test_199_input1, 0.573834604794341); EXPECT_LE(fabs(placementcost - (-17092.10258349109426490031182765960693359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_200_input2, test_200_input1, 0.032973782868452); EXPECT_LE(fabs(placementcost - (-987.8877812663089343914180062711238861083984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_201_input2, test_201_input1, 0.422947575696024); EXPECT_LE(fabs(placementcost - (-12552.505480534631715272553265094757080078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_202_input2, test_202_input1, 0.399797596240668); EXPECT_LE(fabs(placementcost - (-11848.03460694580644485540688037872314453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_203_input2, test_203_input1, 0.722142983894372); EXPECT_LE(fabs(placementcost - (-21570.37064580877267871983349323272705078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_204_input2, test_204_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99745742865745534722066167887533083558082580566406)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_205_input2, test_205_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-13.28894249908825742068074760027229785919189453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_206_input2, test_206_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-11.68253782959711628564036800526082515716552734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_207_input2, test_207_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596536901774374683782298234291374683380126953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_208_input2, test_208_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_209_input2, test_209_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807783089011440580406997469253838062286376953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_210_input2, test_210_input1, 0.476151471097346); EXPECT_LE(fabs(placementcost - (-14234.00810264711617492139339447021484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_211_input2, test_211_input1, 0.611628226390223); EXPECT_LE(fabs(placementcost - (-18282.17931503015643102116882801055908203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_212_input2, test_212_input1, 0.106637256553098); EXPECT_LE(fabs(placementcost - (-3185.98821577598937437869608402252197265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_213_input2, test_213_input1, 0.0466262307526292); EXPECT_LE(fabs(placementcost - (-1392.693356106493638435495086014270782470703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_214_input2, test_214_input1, 0.29774725696201); EXPECT_LE(fabs(placementcost - (-8897.13982157141072093509137630462646484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_215_input2, test_215_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703350834120744394795110565610229969024658203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_216_input2, test_216_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.395293638781589962150064820889383554458618164062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_217_input2, test_217_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-2.5919261476929547072245441086124628782272338867188)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_218_input2, test_218_input1, 3.3454886086112885137250350098270246235188096761703e-05); EXPECT_LE(fabs(placementcost - (-1.0000000000000004440892098500626161694526672363281)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_219_input2, test_219_input1, 0); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_220_input2, test_220_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_221_input2, test_221_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.08548563798598252105875872075557708740234375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_222_input2, test_222_input1, 0.648696457494133); EXPECT_LE(fabs(placementcost - (-19348.3078837760767783038318157196044921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_223_input2, test_223_input1, 0.466939143634848); EXPECT_LE(fabs(placementcost - (-13957.27794238923888769932091236114501953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_224_input2, test_224_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.794267315032652021500325645320117473602294921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_225_input2, test_225_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_226_input2, test_226_input1, 4.1818607607641106421562937622837807793985120952129e-06); EXPECT_LE(fabs(placementcost - (-27.09172471842176577183636254630982875823974609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_227_input2, test_227_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40298826258139541778291459195315837860107421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_228_input2, test_228_input1, 0); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_229_input2, test_229_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_230_input2, test_230_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_231_input2, test_231_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40181734156838189164773211814463138580322265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_232_input2, test_232_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_233_input2, test_233_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.708904345211038844354334287345409393310546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_234_input2, test_234_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6914679690166138925633276812732219696044921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_235_input2, test_235_input1, 0.124777808344215); EXPECT_LE(fabs(placementcost - (-3719.87202002274489132105372846126556396484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_236_input2, test_236_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.689745042383179907119483686983585357666015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_237_input2, test_237_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596001623596995599996262171771377325057983398438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_238_input2, test_238_input1, 0.964083300711858); EXPECT_LE(fabs(placementcost - (-28533.35158099721229518763720989227294921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_239_input2, test_239_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-37.48128029514310810554889030754566192626953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_240_input2, test_240_input1, 0.354299507674647); EXPECT_LE(fabs(placementcost - (-10561.46771884525151108391582965850830078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_241_input2, test_241_input1, 0.992009092832758); EXPECT_LE(fabs(placementcost - (-29597.69791995956984465010464191436767578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_242_input2, test_242_input1, 0.662564258218803); EXPECT_LE(fabs(placementcost - (-19776.3516692985431291162967681884765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_243_input2, test_243_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-2.955033962340468889351541292853653430938720703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_244_input2, test_244_input1, 0.462175308994036); EXPECT_LE(fabs(placementcost - (-13795.4925202188533148728311061859130859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_245_input2, test_245_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999983346654630622651893645524978637695)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_246_input2, test_246_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.599296929876478756682445236947387456893920898438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_247_input2, test_247_input1, 0.645906011116752); EXPECT_LE(fabs(placementcost - (-19133.9176688573861611075699329376220703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_248_input2, test_248_input1, 2.8227560135157741752357299369613485851004952564836e-05); EXPECT_LE(fabs(placementcost - (-0.84375000000000033306690738754696212708950042724609)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_249_input2, test_249_input1, 0.619442777536515); EXPECT_LE(fabs(placementcost - (-18518.6383767302686464972794055938720703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_250_input2, test_250_input1, 3.3454886086112885137250350098270246235188096761703e-05); EXPECT_LE(fabs(placementcost - (-1.0016058345321334765998244620277546346187591552734)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_251_input2, test_251_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_252_input2, test_252_input1, 0.680322296014927); EXPECT_LE(fabs(placementcost - (-20335.51375018218459445051848888397216796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_253_input2, test_253_input1, 0.754027557413776); EXPECT_LE(fabs(placementcost - (-22538.6377186551762861199676990509033203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_254_input2, test_254_input1, 0.00010036465825833862830669673815719988851924426853657); EXPECT_LE(fabs(placementcost - (-13.294071868998765140190698730293661355972290039062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_255_input2, test_255_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.390944503590395342484953289385885000228881835938)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_256_input2, test_256_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.5)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_257_input2, test_257_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_258_input2, test_258_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99886253387307188944532754248939454555511474609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_259_input2, test_259_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_260_input2, test_260_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49963199625305265705321744462708011269569396972656)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_261_input2, test_261_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6922876137257247819434269331395626068115234375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_262_input2, test_262_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_263_input2, test_263_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-2.3864609510856338303597112826537340879440307617188)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_264_input2, test_264_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.401449337821434326656344637740403413772583007812)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_265_input2, test_265_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_266_input2, test_266_input1, 0.393401899942218); EXPECT_LE(fabs(placementcost - (-11759.176191172839025966823101043701171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_267_input2, test_267_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.688831413559370275834226049482822418212890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_268_input2, test_268_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1.6928349352051963450094262952916324138641357421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_269_input2, test_269_input1, 0.18439190168175); EXPECT_LE(fabs(placementcost - (-5511.6583331691899729776196181774139404296875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_270_input2, test_270_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_271_input2, test_271_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_272_input2, test_272_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999994448884876874217297881841659545898)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_273_input2, test_273_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_274_input2, test_274_input1, 0.774564981102706); EXPECT_LE(fabs(placementcost - (-23068.6737682302991743199527263641357421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_275_input2, test_275_input1, 0.353812755933365); EXPECT_LE(fabs(placementcost - (-10539.035284184035845100879669189453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_276_input2, test_276_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999994448884876874217297881841659545898)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_277_input2, test_277_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_278_input2, test_278_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_279_input2, test_279_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.50013381954434443787960162808303721249103546142578)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_280_input2, test_280_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_281_input2, test_281_input1, 0.328682808880373); EXPECT_LE(fabs(placementcost - (-9824.6578402432278380729258060455322265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_282_input2, test_282_input1, 0.381636928906476); EXPECT_LE(fabs(placementcost - (-11404.074709583319418015889823436737060546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_283_input2, test_283_input1, 0.110156286718972); EXPECT_LE(fabs(placementcost - (-3292.681867410765335080213844776153564453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_284_input2, test_284_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_285_input2, test_285_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-33.61320992371930316267025773413479328155517578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_286_input2, test_286_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-15.41516879880834522964505595155060291290283203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_287_input2, test_287_input1, 0.181351515168138); EXPECT_LE(fabs(placementcost - (-5400.7337793266442531603388488292694091796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_288_input2, test_288_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402252255087500287800139631144702434539794921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_289_input2, test_289_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_290_input2, test_290_input1, 0.42455336128668); EXPECT_LE(fabs(placementcost - (-12690.32452222015126608312129974365234375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_291_input2, test_291_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.710710909059688589195502572692930698394775390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_292_input2, test_292_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403757724961376851524619269184768199920654296875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_293_input2, test_293_input1, 0.101222437471027); EXPECT_LE(fabs(placementcost - (-3028.927703130228110239841043949127197265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_294_input2, test_294_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_295_input2, test_295_input1, 3.3454886086112885137250350098270246235188096761703e-05); EXPECT_LE(fabs(placementcost - (-1.0000000000000002220446049250313080847263336181641)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_296_input2, test_296_input1, 0.852232213721659); EXPECT_LE(fabs(placementcost - (-25474.0731003541077370755374431610107421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_297_input2, test_297_input1, 0.575806161839137); EXPECT_LE(fabs(placementcost - (-17209.29754657063676859252154827117919921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_298_input2, test_298_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99963199625305254603091498211142607033252716064453)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_299_input2, test_299_input1, 0.291513187987583); EXPECT_LE(fabs(placementcost - (-8710.414090523865525028668344020843505859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_300_input2, test_300_input1, 0.834628029882351); EXPECT_LE(fabs(placementcost - (-24948.75730290697174496017396450042724609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_301_input2, test_301_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-26.292851466518239789138533524237573146820068359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_302_input2, test_302_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.398271123643253233126415580045431852340698242188)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_303_input2, test_303_input1, 0.185518853664624); EXPECT_LE(fabs(placementcost - (-5545.3440548892767765210010111331939697265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_304_input2, test_304_input1, 0.249961470870852); EXPECT_LE(fabs(placementcost - (-7404.0941747349779689102433621883392333984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_305_input2, test_305_input1, 0.606911276727416); EXPECT_LE(fabs(placementcost - (-18075.4158058965622331015765666961669921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_306_input2, test_306_input1, 0.593687721584187); EXPECT_LE(fabs(placementcost - (-17734.3175210488625452853739261627197265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_307_input2, test_307_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.5)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_308_input2, test_308_input1, 0.82192243459811); EXPECT_LE(fabs(placementcost - (-24568.0834925721064792014658451080322265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_309_input2, test_309_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_310_input2, test_310_input1, 0.612779068643514); EXPECT_LE(fabs(placementcost - (-18069.991981129380292259156703948974609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_311_input2, test_311_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.5926728624314279159079887904226779937744140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_312_input2, test_312_input1, 0.881867547638901); EXPECT_LE(fabs(placementcost - (-26264.12176192977858590893447399139404296875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_313_input2, test_313_input1, 0.168748684268493); EXPECT_LE(fabs(placementcost - (-5044.0669214695235496037639677524566650390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_314_input2, test_314_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402252255087500287800139631144702434539794921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_315_input2, test_315_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.203411276653895356503198854625225067138671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_316_input2, test_316_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596955087850449928055240889079868793487548828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_317_input2, test_317_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596168898027427118790910753887146711349487304688)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_318_input2, test_318_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.397635480807617014420429768506437540054321289062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_319_input2, test_319_input1, 0.966651002424784); EXPECT_LE(fabs(placementcost - (-28753.71414493216070695780217647552490234375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_320_input2, test_320_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.799051363742965037317844689823687076568603515625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_321_input2, test_321_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_322_input2, test_322_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.805240517668895705583054223097860813140869140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_323_input2, test_323_input1, 0.00020072931651667725661339347631439977703848853707314); EXPECT_LE(fabs(placementcost - (-15.596910102108486384508978517260402441024780273438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_324_input2, test_324_input1, 0.811053944255889); EXPECT_LE(fabs(placementcost - (-24175.26782060255573014728724956512451171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_325_input2, test_325_input1, 0.364888897092651); EXPECT_LE(fabs(placementcost - (-10823.251906831590531510300934314727783203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_326_input2, test_326_input1, 0.242036945514744); EXPECT_LE(fabs(placementcost - (-7178.47732405309579917229712009429931640625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_327_input2, test_327_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.08916567545545461825895472429692745208740234375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_328_input2, test_328_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.20220690075479552660908666439354419708251953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_329_input2, test_329_input1, 0.551178669386082); EXPECT_LE(fabs(placementcost - (-16405.8832509113199193961918354034423828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_330_input2, test_330_input1, 0.904108702359077); EXPECT_LE(fabs(placementcost - (-27024.7132222151631140150129795074462890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_331_input2, test_331_input1, 0.146503647051818); EXPECT_LE(fabs(placementcost - (-4369.942769222403512685559689998626708984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_332_input2, test_332_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.390944503590395342484953289385885000228881835938)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_333_input2, test_333_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_334_input2, test_334_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59029756551931455987869412638247013092041015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_335_input2, test_335_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.5)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_336_input2, test_336_input1, 0.840709844432153); EXPECT_LE(fabs(placementcost - (-24803.05324157272116281092166900634765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_337_input2, test_337_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_338_input2, test_338_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_339_input2, test_339_input1, 0.747110664150619); EXPECT_LE(fabs(placementcost - (-22251.092843318285304121673107147216796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_340_input2, test_340_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_341_input2, test_341_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99996654511391391828567520860815420746803283691406)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_342_input2, test_342_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_343_input2, test_343_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.211674633517162646967335604131221771240234375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_344_input2, test_344_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_345_input2, test_345_input1, 0.678350952720648); EXPECT_LE(fabs(placementcost - (-20233.30547351211498607881367206573486328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_346_input2, test_346_input1, 0.0139604119523581); EXPECT_LE(fabs(placementcost - (-417.29067366793600513119599781930446624755859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_347_input2, test_347_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.79015245136131539993584738112986087799072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_348_input2, test_348_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.5)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_349_input2, test_349_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-0.25)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_350_input2, test_350_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-34.004592866642695980772259645164012908935546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_351_input2, test_351_input1, 0.319758669464847); EXPECT_LE(fabs(placementcost - (-9567.18630788081281934864819049835205078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_352_input2, test_352_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_353_input2, test_353_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.2101022538711134757249965332448482513427734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_354_input2, test_354_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6922876137257247819434269331395626068115234375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_355_input2, test_355_input1, 0.410814896605606); EXPECT_LE(fabs(placementcost - (-12279.6680744381665135733783245086669921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_356_input2, test_356_input1, 0.0533666714704844); EXPECT_LE(fabs(placementcost - (-1602.978604922767544849193654954433441162109375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_357_input2, test_357_input1, 0.973041932155785); EXPECT_LE(fabs(placementcost - (-29085.1963940685745910741388797760009765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_358_input2, test_358_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403690815189204244006759836338460445404052734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_359_input2, test_359_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-16.0398450469250946071042562834918498992919921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_360_input2, test_360_input1, -1); EXPECT_LE(fabs(placementcost - (-50.01805063112228566524208872579038143157958984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_361_input2, test_361_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_362_input2, test_362_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_363_input2, test_363_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_364_input2, test_364_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_365_input2, test_365_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597005270179579383693635463714599609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_366_input2, test_366_input1, 0.288409193754982); EXPECT_LE(fabs(placementcost - (-8622.8927886206729453988373279571533203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_367_input2, test_367_input1, 0.43914383591878); EXPECT_LE(fabs(placementcost - (-13126.4483994482507114298641681671142578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_368_input2, test_368_input1, 0.161029177876059); EXPECT_LE(fabs(placementcost - (-4813.323155893280272721312940120697021484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_369_input2, test_369_input1, 0.318306149582771); EXPECT_LE(fabs(placementcost - (-9517.702600407204954535700380802154541015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_370_input2, test_370_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_371_input2, test_371_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.31050744852546330321274581365287303924560546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_372_input2, test_372_input1, 0.620829297296119); EXPECT_LE(fabs(placementcost - (-18536.75336488841639948077499866485595703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_373_input2, test_373_input1, 0.0747707526849842); EXPECT_LE(fabs(placementcost - (-2237.71723545815848410711623728275299072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_374_input2, test_374_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596570356660460987541227950714528560638427734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_375_input2, test_375_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.7089712549832114518721937201917171478271484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_376_input2, test_376_input1, 0.787221255042792); EXPECT_LE(fabs(placementcost - (-23428.01860275128638022579252719879150390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_377_input2, test_377_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402419529517931806594788213260471820831298828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_378_input2, test_378_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6935254445109109155964688397943973541259765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_379_input2, test_379_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_380_input2, test_380_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_381_input2, test_381_input1, 0.00010036465825833862830669673815719988851924426853657); EXPECT_LE(fabs(placementcost - (-13.294272598315279410030598228331655263900756835938)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_382_input2, test_382_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_383_input2, test_383_input1, 0.213188663378705); EXPECT_LE(fabs(placementcost - (-6372.422337052872535423375666141510009765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_384_input2, test_384_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_385_input2, test_385_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.693592354283083523114328272640705108642578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_386_input2, test_386_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-14.016292442828470754534464504104107618331909179688)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_387_input2, test_387_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_388_input2, test_388_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59690490552132047241684631444513797760009765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_389_input2, test_389_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-15.786064112783792623417866707313805818557739257812)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_390_input2, test_390_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403858089619633986444569018203765153884887695312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_391_input2, test_391_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-34.12483956201229062799029634334146976470947265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_392_input2, test_392_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_393_input2, test_393_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_394_input2, test_394_input1, 0.564639281500659); EXPECT_LE(fabs(placementcost - (-16858.97592968239405308850109577178955078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_395_input2, test_395_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_396_input2, test_396_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596720903647847578099572274368256330490112304688)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_397_input2, test_397_input1, -1); EXPECT_LE(fabs(placementcost - (-12.502561450573255186213827983010560274124145507812)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_398_input2, test_398_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-15.4016946816121702568125328980386257171630859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_399_input2, test_399_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403021717467481721541844308376312255859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_400_input2, test_400_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.600250394129933084741423954255878925323486328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_401_input2, test_401_input1, 0.856452885830303); EXPECT_LE(fabs(placementcost - (-25507.27696117143568699248135089874267578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_402_input2, test_402_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_403_input2, test_403_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.803032495187213868348408141173422336578369140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_404_input2, test_404_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.21040334784589020955536398105323314666748046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_405_input2, test_405_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_406_input2, test_406_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-14.315887409205817704105356824584305286407470703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_407_input2, test_407_input1, 0.481432444485288); EXPECT_LE(fabs(placementcost - (-14380.291289740052889101207256317138671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_408_input2, test_408_input1, 0.407945293712104); EXPECT_LE(fabs(placementcost - (-12151.014026526443558395840227603912353515625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_409_input2, test_409_input1, 0.845581694416031); EXPECT_LE(fabs(placementcost - (-25246.95341126639323192648589611053466796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_410_input2, test_410_input1, 0.214670936604063); EXPECT_LE(fabs(placementcost - (-6395.75242424499811022542417049407958984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_411_input2, test_411_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-13.986555907375961993466262356378138065338134765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_412_input2, test_412_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807783089011440580406997469253838062286376953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_413_input2, test_413_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_414_input2, test_414_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.420819630169827263443949050270020961761474609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_415_input2, test_415_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_416_input2, test_416_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_417_input2, test_417_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_418_input2, test_418_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_419_input2, test_419_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-6.0161415930231516568937877309508621692657470703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_420_input2, test_420_input1, 7.5273493693753978006286131652302628936013206839561e-05); EXPECT_LE(fabs(placementcost - (-3.5219584488879180916853783855913206934928894042969)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_421_input2, test_421_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597021997622622535573100321926176548004150390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_422_input2, test_422_input1, 0.416015218221154); EXPECT_LE(fabs(placementcost - (-12413.81401834148346097208559513092041015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_423_input2, test_423_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40292135280922281026505515910685062408447265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_424_input2, test_424_input1, 0.685145271381765); EXPECT_LE(fabs(placementcost - (-20479.67730687233779462985694408416748046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_425_input2, test_425_input1, 0.650217764402106); EXPECT_LE(fabs(placementcost - (-19435.6591957433483912609517574310302734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_426_input2, test_426_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807783089011440580406997469253838062286376953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_427_input2, test_427_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-24.033822716442127642721970914863049983978271484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_428_input2, test_428_input1, 0.284860570869984); EXPECT_LE(fabs(placementcost - (-8513.409147249249144806526601314544677734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_429_input2, test_429_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-23.084806812127663278033651295118033885955810546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_430_input2, test_430_input1, 0.760240836452811); EXPECT_LE(fabs(placementcost - (-22699.5878875092676025815308094024658203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_431_input2, test_431_input1, 3.3454886086112885137250350098270246235188096761703e-05); EXPECT_LE(fabs(placementcost - (-12.403824634733547682685639301780611276626586914062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_432_input2, test_432_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-73.08122870381140501194749958813190460205078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_433_input2, test_433_input1, 0.856411960974246); EXPECT_LE(fabs(placementcost - (-25599.00992548119029379449784755706787109375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_434_input2, test_434_input1, 0.557785492921825); EXPECT_LE(fabs(placementcost - (-16668.87070709751787944696843624114990234375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_435_input2, test_435_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_436_input2, test_436_input1, 0.356821532001371); EXPECT_LE(fabs(placementcost - (-10668.03636880944759468547999858856201171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_437_input2, test_437_input1, 0.221580994464685); EXPECT_LE(fabs(placementcost - (-6608.8213483516219639568589627742767333984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_438_input2, test_438_input1, 0.573880332206418); EXPECT_LE(fabs(placementcost - (-17153.85700998203174094669520854949951171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_439_input2, test_439_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.5965201743313315319028333760797977447509765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_440_input2, test_440_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597992189319120015511543897446244955062866210938)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_441_input2, test_441_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_442_input2, test_442_input1, 0.86813529539534); EXPECT_LE(fabs(placementcost - (-25949.4321146621005027554929256439208984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_443_input2, test_443_input1, 0.522679351286332); EXPECT_LE(fabs(placementcost - (-15566.09312199105988838709890842437744140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_444_input2, test_444_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.42142181811937717839100514538586139678955078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_445_input2, test_445_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_446_input2, test_446_input1, 0.565688537126442); EXPECT_LE(fabs(placementcost - (-16908.99606324647902511060237884521484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_447_input2, test_447_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.708904345211038844354334287345409393310546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_448_input2, test_448_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.405798473012628946321456169243901968002319335938)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_449_input2, test_449_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_450_input2, test_450_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_451_input2, test_451_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.2103698929598039057964342646300792694091796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_452_input2, test_452_input1, 2.5091164564584657076674184539299972129811067134142e-05); EXPECT_LE(fabs(placementcost - (-12.438847043741484199586011527571827173233032226562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_453_input2, test_453_input1, 0.503613807819372); EXPECT_LE(fabs(placementcost - (-15050.26874929828409221954643726348876953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_454_input2, test_454_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_455_input2, test_455_input1, 0.920575976541985); EXPECT_LE(fabs(placementcost - (-27516.93651481648339540697634220123291015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_456_input2, test_456_input1, 0.34066249891085); EXPECT_LE(fabs(placementcost - (-10182.74275494421817711554467678070068359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_457_input2, test_457_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_458_input2, test_458_input1, 0.472481753484241); EXPECT_LE(fabs(placementcost - (-14074.20335563754997565411031246185302734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_459_input2, test_459_input1, 0.93212792399547); EXPECT_LE(fabs(placementcost - (-27814.9340216057098587043583393096923828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_460_input2, test_460_input1, 1.2545582282292328538337092269649986064905533567071e-05); EXPECT_LE(fabs(placementcost - (-12.760996265049481479536552797071635723114013671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_461_input2, test_461_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_462_input2, test_462_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4028209881509638989882660098373889923095703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_463_input2, test_463_input1, 0.422136026561124); EXPECT_LE(fabs(placementcost - (-12615.8076496406793012283742427825927734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_464_input2, test_464_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596536901774374683782298234291374683380126953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_465_input2, test_465_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_466_input2, test_466_input1, 0.797339781909065); EXPECT_LE(fabs(placementcost - (-23823.176860393126844428479671478271484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_467_input2, test_467_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-3.9999999999999991118215802998747676610946655273438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_468_input2, test_468_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596503446888288380023368517868220806121826171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_469_input2, test_469_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-3.5048784564134285446357353066559880971908569335938)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_470_input2, test_470_input1, 0.562249674589178); EXPECT_LE(fabs(placementcost - (-16790.44970478843242744915187358856201171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_471_input2, test_471_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_472_input2, test_472_input1, 0.387198772006709); EXPECT_LE(fabs(placementcost - (-11573.75849405253757140599191188812255859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_473_input2, test_473_input1, 0.435137353139342); EXPECT_LE(fabs(placementcost - (-13006.690622688069197465665638446807861328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_474_input2, test_474_input1, 0.277212682391072); EXPECT_LE(fabs(placementcost - (-8258.052476838123766356147825717926025390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_475_input2, test_475_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_476_input2, test_476_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402620258834447852791527111548930406570434570312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_477_input2, test_477_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.808084182986217314237364917062222957611083984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_478_input2, test_478_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_479_input2, test_479_input1, 0.0510608702747484); EXPECT_LE(fabs(placementcost - (-1528.39605199523020928609184920787811279296875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_480_input2, test_480_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.809221649113144536613617674447596073150634765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_481_input2, test_481_input1, 0.932516624454133); EXPECT_LE(fabs(placementcost - (-27881.0162203651270829141139984130859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_482_input2, test_482_input1, 0.861199582518749); EXPECT_LE(fabs(placementcost - (-25742.11672106793048442341387271881103515625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_483_input2, test_483_input1, 5.854605065069753543766095660316750581841915845871e-05); EXPECT_LE(fabs(placementcost - (-12.592377191784910550609311030711978673934936523438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_484_input2, test_484_input1, 0.238345205385665); EXPECT_LE(fabs(placementcost - (-7119.758825523398627410642802715301513671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_485_input2, test_485_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_486_input2, test_486_input1, 0.0839089589873951); EXPECT_LE(fabs(placementcost - (-2508.1226930922266546986065804958343505859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_487_input2, test_487_input1, 0.00010036465825833862830669673815719988851924426853657); EXPECT_LE(fabs(placementcost - (-2.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_488_input2, test_488_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.42496803604450406055548228323459625244140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_489_input2, test_489_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596369627343943164987649652175605297088623046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_490_input2, test_490_input1, 0.0575346105767069); EXPECT_LE(fabs(placementcost - (-1722.110056530055089751840569078922271728515625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_491_input2, test_491_input1, 0.291085401607797); EXPECT_LE(fabs(placementcost - (-8685.516915105792577378451824188232421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_492_input2, test_492_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_493_input2, test_493_input1, 0.0155632298062127); EXPECT_LE(fabs(placementcost - (-465.20050213750386092215194366872310638427734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_494_input2, test_494_input1, 0.327426903394917); EXPECT_LE(fabs(placementcost - (-9788.3503914005050319246947765350341796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_495_input2, test_495_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-0.24999999999999994448884876874217297881841659545898)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_496_input2, test_496_input1, 0.53262814269006); EXPECT_LE(fabs(placementcost - (-15920.78781314858133555389940738677978515625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_497_input2, test_497_input1, 0.652041640049113); EXPECT_LE(fabs(placementcost - (-19467.36969125394170987419784069061279296875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_498_input2, test_498_input1, 0.279907617975919); EXPECT_LE(fabs(placementcost - (-8360.093363227993904729373753070831298828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_499_input2, test_499_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_500_input2, test_500_input1, 0.118989195128525); EXPECT_LE(fabs(placementcost - (-3553.06124636004778949427418410778045654296875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_501_input2, test_501_input1, 0.47059528208925); EXPECT_LE(fabs(placementcost - (-14066.563576929775081225670874118804931640625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_502_input2, test_502_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403590450530945332729970687068998813629150390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_503_input2, test_503_input1, 0.705621827194821); EXPECT_LE(fabs(placementcost - (-21091.74203668039626791141927242279052734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_504_input2, test_504_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_505_input2, test_505_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_506_input2, test_506_input1, 0.526262056464379); EXPECT_LE(fabs(placementcost - (-15730.499129776750123710371553897857666015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_507_input2, test_507_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.694094177574374526784595218487083911895751953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_508_input2, test_508_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-14.31307719877458595192365464754402637481689453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_509_input2, test_509_input1, 0.521834969129584); EXPECT_LE(fabs(placementcost - (-15582.69752445196718326769769191741943359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_510_input2, test_510_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.42135490834720457087314571253955364227294921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_511_input2, test_511_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_512_input2, test_512_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_513_input2, test_513_input1, 1.2545582282292325150205303252448629791615530848503e-05); EXPECT_LE(fabs(placementcost - (-0.37499999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_514_input2, test_514_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59703872506566568745256518013775348663330078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_515_input2, test_515_input1, 0.296624325227008); EXPECT_LE(fabs(placementcost - (-8859.81287673141559935174882411956787109375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_516_input2, test_516_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_517_input2, test_517_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403456630986600117694251821376383304595947265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_518_input2, test_518_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.69384326592872724859262234531342983245849609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_519_input2, test_519_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_520_input2, test_520_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4028209881509638989882660098373889923095703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_521_input2, test_521_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-26.7958519282007756601160508580505847930908203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_522_input2, test_522_input1, 0.172175379403036); EXPECT_LE(fabs(placementcost - (-5143.8425075578852556645870208740234375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_523_input2, test_523_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807749634125354276648067752830684185028076171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_524_input2, test_524_input1, 0.562498461457979); EXPECT_LE(fabs(placementcost - (-16813.62799522484056069515645503997802734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_525_input2, test_525_input1, 0.788885628522069); EXPECT_LE(fabs(placementcost - (-23554.30507136971937143243849277496337890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_526_input2, test_526_input1, 0.616151104312601); EXPECT_LE(fabs(placementcost - (-18418.0738052606830024160444736480712890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_527_input2, test_527_input1, 0.514432300246266); EXPECT_LE(fabs(placementcost - (-15376.895886661137410555966198444366455078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_528_input2, test_528_input1, 0.74382117163573); EXPECT_LE(fabs(placementcost - (-22234.20938711438429891131818294525146484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_529_input2, test_529_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-3.9999999999999991118215802998747676610946655273438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_530_input2, test_530_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_531_input2, test_531_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_532_input2, test_532_input1, 0.057041070950663); EXPECT_LE(fabs(placementcost - (-1705.0146517862676773802377283573150634765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_533_input2, test_533_input1, 0.809985066986906); EXPECT_LE(fabs(placementcost - (-24211.2636373056084266863763332366943359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_534_input2, test_534_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.802831765870696045794829842634499073028564453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_535_input2, test_535_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.8035008635924185682597453705966472625732421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_536_input2, test_536_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403556995644859028971040970645844936370849609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_537_input2, test_537_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807749634125354276648067752830684185028076171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_538_input2, test_538_input1, 0.733494978300924); EXPECT_LE(fabs(placementcost - (-21629.24147699735112837515771389007568359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_539_input2, test_539_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_540_input2, test_540_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_541_input2, test_541_input1, 0.161099972260429); EXPECT_LE(fabs(placementcost - (-4812.0807143679821820114739239215850830078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_542_input2, test_542_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_543_input2, test_543_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.5989958359017037992089171893894672393798828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_544_input2, test_544_input1, 4.1818607607641099645299359588435095247405115514994e-05); EXPECT_LE(fabs(placementcost - (-1.2500000000000004440892098500626161694526672363281)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_545_input2, test_545_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-0.24999999999999994448884876874217297881841659545898)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_546_input2, test_546_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_547_input2, test_547_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_548_input2, test_548_input1, 0.478852903742299); EXPECT_LE(fabs(placementcost - (-14257.933887990400762646459043025970458984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_549_input2, test_549_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402887897923136506506125442683696746826171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_550_input2, test_550_input1, 0.457929973054824); EXPECT_LE(fabs(placementcost - (-13687.984824581742941518314182758331298828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_551_input2, test_551_input1, 0.554820734041564); EXPECT_LE(fabs(placementcost - (-16525.936904773392598144710063934326171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_552_input2, test_552_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_553_input2, test_553_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.405798473012628946321456169243901968002319335938)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_554_input2, test_554_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_555_input2, test_555_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_556_input2, test_556_input1, 0.162331397723044); EXPECT_LE(fabs(placementcost - (-4851.10655314739051391370594501495361328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_557_input2, test_557_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597055452508708839332030038349330425262451171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_558_input2, test_558_input1, 0.112681273398979); EXPECT_LE(fabs(placementcost - (-3372.01520125467732214019633829593658447265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_559_input2, test_559_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.708168337717143714371559326536953449249267578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_560_input2, test_560_input1, 0.329215727371427); EXPECT_LE(fabs(placementcost - (-9831.27441072679721401073038578033447265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_561_input2, test_561_input1, 0.154898590994739); EXPECT_LE(fabs(placementcost - (-4615.998535330816594068892300128936767578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_562_input2, test_562_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.694411998992194412494427524507045745849609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_563_input2, test_563_input1, 0.453464845371786); EXPECT_LE(fabs(placementcost - (-13551.87249437391074025072157382965087890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_564_input2, test_564_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.804136506428054786965731182135641574859619140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_565_input2, test_565_input1, 0.868834400302685); EXPECT_LE(fabs(placementcost - (-25950.71624886435529333539307117462158203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_566_input2, test_566_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-24.49954746786188053420119103975594043731689453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_567_input2, test_567_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_568_input2, test_568_input1, 0.649014962863806); EXPECT_LE(fabs(placementcost - (-19399.7062549620241043157875537872314453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_569_input2, test_569_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_570_input2, test_570_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_571_input2, test_571_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_572_input2, test_572_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.2080280509337768535260693170130252838134765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_573_input2, test_573_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.802831765870696045794829842634499073028564453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_574_input2, test_574_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_575_input2, test_575_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403858089619633986444569018203765153884887695312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_576_input2, test_576_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_577_input2, test_577_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_578_input2, test_578_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403590450530945332729970687068998813629150390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_579_input2, test_579_input1, 0); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_580_input2, test_580_input1, 0.0390066774773784); EXPECT_LE(fabs(placementcost - (-1166.000496672613735427148640155792236328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_581_input2, test_581_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_582_input2, test_582_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.804136506428054786965731182135641574859619140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_583_input2, test_583_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59641980967307262062604422681033611297607421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_584_input2, test_584_input1, 0.536981829465757); EXPECT_LE(fabs(placementcost - (-16037.071794817269619670696556568145751953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_585_input2, test_585_input1, 0.402842084059487); EXPECT_LE(fabs(placementcost - (-12042.957715471531628281809389591217041015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_586_input2, test_586_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.69411090501741767866406007669866085052490234375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_587_input2, test_587_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40312208212574063281863345764577388763427734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_588_input2, test_588_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_589_input2, test_589_input1, 0.840512708051668); EXPECT_LE(fabs(placementcost - (-25119.1559294751714332960546016693115234375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_590_input2, test_590_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_591_input2, test_591_input1, 0.215024285307028); EXPECT_LE(fabs(placementcost - (-6427.2909121123739168979227542877197265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_592_input2, test_592_input1, 0.706200087845502); EXPECT_LE(fabs(placementcost - (-21110.27517144858211395330727100372314453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_593_input2, test_593_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.693324715194393093042890541255474090576171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_594_input2, test_594_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59029756551931455987869412638247013092041015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_595_input2, test_595_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-14.578826910474450784249711432494223117828369140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_596_input2, test_596_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.590966663241037082343609654344618320465087890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_597_input2, test_597_input1, 0.00026763908868890302688789417651094026950886473059654); EXPECT_LE(fabs(placementcost - (-17.312439698720964997846749611198902130126953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_598_input2, test_598_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.708904345211038844354334287345409393310546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_599_input2, test_599_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_600_input2, test_600_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_601_input2, test_601_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-36.790580897019623307642177678644657135009765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_602_input2, test_602_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.41412865295260559150847257114946842193603515625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_603_input2, test_603_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403590450530945332729970687068998813629150390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_604_input2, test_604_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_605_input2, test_605_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-16.15542044690688072705597733147442340850830078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_606_input2, test_606_input1, 0.463972005600395); EXPECT_LE(fabs(placementcost - (-13820.819413479764989460818469524383544921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_607_input2, test_607_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_608_input2, test_608_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_609_input2, test_609_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400211507036248193003302731085568666458129882812)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_610_input2, test_610_input1, 0); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_611_input2, test_611_input1, 0.434732356549075); EXPECT_LE(fabs(placementcost - (-12994.584869608399458229541778564453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_612_input2, test_612_input1, 0.477291938688047); EXPECT_LE(fabs(placementcost - (-14266.733339324413464055396616458892822265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_613_input2, test_613_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.806377983795822927959306980483233928680419921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_614_input2, test_614_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_615_input2, test_615_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_616_input2, test_616_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_617_input2, test_617_input1, 0.991349828506635); EXPECT_LE(fabs(placementcost - (-29524.4965428461509873159229755401611328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_618_input2, test_618_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1.0035796728112140741018265543971210718154907226562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_619_input2, test_619_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_620_input2, test_620_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807783089011440580406997469253838062286376953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_621_input2, test_621_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.710710909059688589195502572692930698394775390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_622_input2, test_622_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597055452508708839332030038349330425262451171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_623_input2, test_623_input1, 0.631122978030023); EXPECT_LE(fabs(placementcost - (-18846.25986782868494628928601741790771484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_624_input2, test_624_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_625_input2, test_625_input1, 0.752092126996747); EXPECT_LE(fabs(placementcost - (-22399.439142832023208029568195343017578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_626_input2, test_626_input1, 5.0182329129169314153348369078599944259622134268284e-05); EXPECT_LE(fabs(placementcost - (-23.496819417909026839197395020164549350738525390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_627_input2, test_627_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_628_input2, test_628_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-36.78934306623443006856177817098796367645263671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_629_input2, test_629_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402620258834447852791527111548930406570434570312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_630_input2, test_630_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-2.00492027430986041736105107702314853668212890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_631_input2, test_631_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_632_input2, test_632_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_633_input2, test_633_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_634_input2, test_634_input1, 0.236733968134899); EXPECT_LE(fabs(placementcost - (-7076.21504152026682277210056781768798828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_635_input2, test_635_input1, 0.0493397760452121); EXPECT_LE(fabs(placementcost - (-1473.495507398032032142509706318378448486328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_636_input2, test_636_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_637_input2, test_637_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_638_input2, test_638_input1, 0.241600380362654); EXPECT_LE(fabs(placementcost - (-7221.6769694200911544612608850002288818359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_639_input2, test_639_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_640_input2, test_640_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-22.606645372233071356049549649469554424285888671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_641_input2, test_641_input1, 0.840947654076494); EXPECT_LE(fabs(placementcost - (-25134.67437553626587032340466976165771484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_642_input2, test_642_input1, 0.982669778087508); EXPECT_LE(fabs(placementcost - (-29372.9823368137076613493263721466064453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_643_input2, test_643_input1, 0.660780887948684); EXPECT_LE(fabs(placementcost - (-19752.6328240368966362439095973968505859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_644_input2, test_644_input1, 0.610402783925346); EXPECT_LE(fabs(placementcost - (-18245.5496143125128583051264286041259765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_645_input2, test_645_input1, 0.339600341191601); EXPECT_LE(fabs(placementcost - (-10152.83279632548146764747798442840576171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_646_input2, test_646_input1, 0.709050529701811); EXPECT_LE(fabs(placementcost - (-21194.229383316836901940405368804931640625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_647_input2, test_647_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_648_input2, test_648_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_649_input2, test_649_input1, 2.5091164564584657076674184539299972129811067134142e-05); EXPECT_LE(fabs(placementcost - (-12.441029975058603085358299722429364919662475585938)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_650_input2, test_650_input1, 0.945410898616449); EXPECT_LE(fabs(placementcost - (-28250.97780947943101637065410614013671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_651_input2, test_651_input1, 0.00023418420260279014175064382641267002327367663383484); EXPECT_LE(fabs(placementcost - (-6.9999999999999991118215802998747676610946655273438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_652_input2, test_652_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_653_input2, test_653_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_654_input2, test_654_input1, 0.961633756487766); EXPECT_LE(fabs(placementcost - (-28717.44497013765430892817676067352294921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_655_input2, test_655_input1, 0.157896949428143); EXPECT_LE(fabs(placementcost - (-4720.4315830308487420552410185337066650390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_656_input2, test_656_input1, 0.240185500091628); EXPECT_LE(fabs(placementcost - (-7156.11679655532861943356692790985107421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_657_input2, test_657_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_658_input2, test_658_input1, 0.296392143480771); EXPECT_LE(fabs(placementcost - (-8859.457560783726876252330839633941650390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_659_input2, test_659_input1, 0.516738926048224); EXPECT_LE(fabs(placementcost - (-15392.00287731474600150249898433685302734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_660_input2, test_660_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-37.88949985549239585225222981534898281097412109375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_661_input2, test_661_input1, 0); EXPECT_LE(fabs(placementcost - (-0.00045164096216252386803771678991381577361607924103737)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_662_input2, test_662_input1, 0.680794516890803); EXPECT_LE(fabs(placementcost - (-20351.23660728741742786951363086700439453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_663_input2, test_663_input1, 0.889174405626712); EXPECT_LE(fabs(placementcost - (-26578.3121585880508064292371273040771484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_664_input2, test_664_input1, 0.417768893529675); EXPECT_LE(fabs(placementcost - (-12478.22167554452971671707928180694580078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_665_input2, test_665_input1, 0.402586812963783); EXPECT_LE(fabs(placementcost - (-12033.722426300437291502021253108978271484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_666_input2, test_666_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40312208212574063281863345764577388763427734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_667_input2, test_667_input1, 0.898505866510297); EXPECT_LE(fabs(placementcost - (-26789.25953847021810361184179782867431640625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_668_input2, test_668_input1, 0); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_669_input2, test_669_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_670_input2, test_670_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-32.6197357535569807396313990466296672821044921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_671_input2, test_671_input1, 0.412315933475146); EXPECT_LE(fabs(placementcost - (-12326.10782925545572652481496334075927734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_672_input2, test_672_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.396932928199808188196584524121135473251342773438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_673_input2, test_673_input1, 0.76535273200673); EXPECT_LE(fabs(placementcost - (-22877.15851241317068343050777912139892578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_674_input2, test_674_input1, 0.874614391921155); EXPECT_LE(fabs(placementcost - (-26142.582144604777568019926548004150390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_675_input2, test_675_input1, 0.0535317223001154); EXPECT_LE(fabs(placementcost - (-1600.11671127274939863127656280994415283203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_676_input2, test_676_input1, 0.760379253902038); EXPECT_LE(fabs(placementcost - (-22728.4962783858063630759716033935546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_677_input2, test_677_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.708636706122350190639735956210643053054809570312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_678_input2, test_678_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.803656528272620462871600466314703226089477539062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_679_input2, test_679_input1, 1.0454651901910274487808366269958604277690028538927e-06); EXPECT_LE(fabs(placementcost - (-14.900863856257975825769790390040725469589233398438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_680_input2, test_680_input1, 0.690035928059316); EXPECT_LE(fabs(placementcost - (-20551.42959743625033297576010227203369140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_681_input2, test_681_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_682_input2, test_682_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595215433773972790731932036578655242919921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_683_input2, test_683_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403021717467481721541844308376312255859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_684_input2, test_684_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_685_input2, test_685_input1, 0.841492329014644); EXPECT_LE(fabs(placementcost - (-25153.04720657672805828042328357696533203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_686_input2, test_686_input1, 0.717564082990982); EXPECT_LE(fabs(placementcost - (-21329.58774405069198110140860080718994140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_687_input2, test_687_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_688_input2, test_688_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_689_input2, test_689_input1, 0.29391612487843); EXPECT_LE(fabs(placementcost - (-8778.07072975070695974864065647125244140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_690_input2, test_690_input1, 0.860888568306977); EXPECT_LE(fabs(placementcost - (-25736.5343752340631908737123012542724609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_691_input2, test_691_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59518197888788648697300232015550136566162109375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_692_input2, test_692_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6922876137257247819434269331395626068115234375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_693_input2, test_693_input1, 0.191585214884387); EXPECT_LE(fabs(placementcost - (-5708.3503193435944922384805977344512939453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_694_input2, test_694_input1, 0.521108938873175); EXPECT_LE(fabs(placementcost - (-15565.711085777145854081027209758758544921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_695_input2, test_695_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_696_input2, test_696_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.806511803340168142995025846175849437713623046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_697_input2, test_697_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807783089011440580406997469253838062286376953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_698_input2, test_698_input1, 0.0569869963669248); EXPECT_LE(fabs(placementcost - (-1707.2478788707712737959809601306915283203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_699_input2, test_699_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403858089619633986444569018203765153884887695312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_700_input2, test_700_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_701_input2, test_701_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.804136506428054786965731182135641574859619140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_702_input2, test_702_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.710710909059688589195502572692930698394775390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_703_input2, test_703_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40278753326487759522933629341423511505126953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_704_input2, test_704_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595984896153952448116797313559800386428833007812)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_705_input2, test_705_input1, 0.997138385397175); EXPECT_LE(fabs(placementcost - (-29693.88831836259123519994318485260009765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_706_input2, test_706_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.41412865295260559150847257114946842193603515625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_707_input2, test_707_input1, 0.737417504287491); EXPECT_LE(fabs(placementcost - (-22043.412057268244097940623760223388671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_708_input2, test_708_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.0399517214230087347459630109369754791259765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_709_input2, test_709_input1, 0.747045239653845); EXPECT_LE(fabs(placementcost - (-22329.92925849308448960073292255401611328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_710_input2, test_710_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-3.9999999999999991118215802998747676610946655273438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_711_input2, test_711_input1, 0.812210636235463); EXPECT_LE(fabs(placementcost - (-24258.78977075920556671917438507080078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_712_input2, test_712_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40285444303705020274719572626054286956787109375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_713_input2, test_713_input1, 0.777489743343948); EXPECT_LE(fabs(placementcost - (-23155.77234364164542057551443576812744140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_714_input2, test_714_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597189272053054054367748904041945934295654296875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_715_input2, test_715_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_716_input2, test_716_input1, 0.753591824337749); EXPECT_LE(fabs(placementcost - (-22525.613221279651043005287647247314453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_717_input2, test_717_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_718_input2, test_718_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_719_input2, test_719_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_720_input2, test_720_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.710710909059688589195502572692930698394775390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_721_input2, test_721_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_722_input2, test_722_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_723_input2, test_723_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.401348973163175415379555488470941781997680664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_724_input2, test_724_input1, 7.5273493693753978006286131652302628936013206839561e-05); EXPECT_LE(fabs(placementcost - (-12.8409623988457468612978118471801280975341796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_725_input2, test_725_input1, 0.298830283984791); EXPECT_LE(fabs(placementcost - (-8903.77884060208089067600667476654052734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_726_input2, test_726_input1, 0.946122312948563); EXPECT_LE(fabs(placementcost - (-28280.54205634549362002871930599212646484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_727_input2, test_727_input1, 0.202299976268355); EXPECT_LE(fabs(placementcost - (-6049.442906601916547515429556369781494140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_728_input2, test_728_input1, 0.970933226622537); EXPECT_LE(fabs(placementcost - (-29022.3222536169923841953277587890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_729_input2, test_729_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-3.9999999999999991118215802998747676610946655273438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_730_input2, test_730_input1, 0.918352507724548); EXPECT_LE(fabs(placementcost - (-27440.903798304832889698445796966552734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_731_input2, test_731_input1, 0.210296907304556); EXPECT_LE(fabs(placementcost - (-6289.18314756251857033930718898773193359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_732_input2, test_732_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_733_input2, test_733_input1, -1); EXPECT_LE(fabs(placementcost - (-12.502940605327095724419450561981648206710815429688)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_734_input2, test_734_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.238108438772986374942775000818073749542236328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_735_input2, test_735_input1, 0.827164778259172); EXPECT_LE(fabs(placementcost - (-24725.24358581092019448988139629364013671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_736_input2, test_736_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_737_input2, test_737_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_738_input2, test_738_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_739_input2, test_739_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_740_input2, test_740_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4028209881509638989882660098373889923095703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_741_input2, test_741_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.691969792307904896233594627119600772857666015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_742_input2, test_742_input1, 4.1818607607641106421562937622837807793985120952129e-06); EXPECT_LE(fabs(placementcost - (-0.12500000000000002775557561562891351059079170227051)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_743_input2, test_743_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.810860938531362762660137377679347991943359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_744_input2, test_744_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.4203512617646225635326118208467960357666015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_745_input2, test_745_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.401348973163175415379555488470941781997680664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_746_input2, test_746_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403556995644859028971040970645844936370849609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_747_input2, test_747_input1, 0.396691547183054); EXPECT_LE(fabs(placementcost - (-11841.084496740621034405194222927093505859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_748_input2, test_748_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_749_input2, test_749_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.806511803340168142995025846175849437713623046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_750_input2, test_750_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_751_input2, test_751_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403423176100515590292161505203694105148315429688)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_752_input2, test_752_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.404025364050065505239217600319534540176391601562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_753_input2, test_753_input1, 0.0651678241296555); EXPECT_LE(fabs(placementcost - (-1947.93143105953276972286403179168701171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_754_input2, test_754_input1, 0.293057882307717); EXPECT_LE(fabs(placementcost - (-8762.44886023526851204223930835723876953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_755_input2, test_755_input1, 1.2545582282292328538337092269649986064905533567071e-05); EXPECT_LE(fabs(placementcost - (-0.37499999999999994448884876874217297881841659545898)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_756_input2, test_756_input1, 0.00012545582282292330571216165679970799828879535198212); EXPECT_LE(fabs(placementcost - (-13.83014513880127793754581944085657596588134765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_757_input2, test_757_input1, 0); EXPECT_LE(fabs(placementcost - (-12.5081093852273994571078219451010227203369140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_758_input2, test_758_input1, 0.06548811361018); EXPECT_LE(fabs(placementcost - (-1960.80579792608614297932945191860198974609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_759_input2, test_759_input1, 0.129808689237081); EXPECT_LE(fabs(placementcost - (-3880.11152998558827675879001617431640625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_760_input2, test_760_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_761_input2, test_761_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_762_input2, test_762_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_763_input2, test_763_input1, 0.15876916802244); EXPECT_LE(fabs(placementcost - (-4741.5635049914626506506465375423431396484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_764_input2, test_764_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_765_input2, test_765_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_766_input2, test_766_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_767_input2, test_767_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_768_input2, test_768_input1, 0); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_769_input2, test_769_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403356266328342982774302072357386350631713867188)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_770_input2, test_770_input1, 0.520254749427876); EXPECT_LE(fabs(placementcost - (-15489.8620313359933788888156414031982421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_771_input2, test_771_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807783089011440580406997469253838062286376953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_772_input2, test_772_input1, 0.563498109413416); EXPECT_LE(fabs(placementcost - (-16843.52198847641921020112931728363037109375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_773_input2, test_773_input1, 0); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_774_input2, test_774_input1, 0.756439820964484); EXPECT_LE(fabs(placementcost - (-22611.98529798121307976543903350830078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_775_input2, test_775_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-13.289377412607377593189994513522833585739135742188)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_776_input2, test_776_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_777_input2, test_777_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.710710909059688589195502572692930698394775390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_778_input2, test_778_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-0.24999999999999994448884876874217297881841659545898)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_779_input2, test_779_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.597055452508708839332030038349330425262451171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_780_input2, test_780_input1, 0.941654493163133); EXPECT_LE(fabs(placementcost - (-28044.57135730612208135426044464111328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_781_input2, test_781_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40175043179620928412987268529832363128662109375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_782_input2, test_782_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_783_input2, test_783_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403456630986600117694251821376383304595947265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_784_input2, test_784_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-32.6197357535569807396313990466296672821044921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_785_input2, test_785_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_786_input2, test_786_input1, 0.435999381696013); EXPECT_LE(fabs(placementcost - (-13022.79899092780760838650166988372802734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_787_input2, test_787_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-14.426374326303983863795110664796084165573120117188)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_788_input2, test_788_input1, 0.961095406335054); EXPECT_LE(fabs(placementcost - (-28728.10279076110236928798258304595947265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_789_input2, test_789_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.5965201743313315319028333760797977447509765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_790_input2, test_790_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_791_input2, test_791_input1, 0.150444767679862); EXPECT_LE(fabs(placementcost - (-4496.9445507187547264038585126399993896484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_792_input2, test_792_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59703872506566568745256518013775348663330078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_793_input2, test_793_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.411920630470920201560147688724100589752197265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_794_input2, test_794_input1, 0.39644585243792); EXPECT_LE(fabs(placementcost - (-11811.832524048042614595033228397369384765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_795_input2, test_795_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_796_input2, test_796_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-25.386583412103473023080368875525891780853271484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_797_input2, test_797_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_798_input2, test_798_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.5965201743313315319028333760797977447509765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_799_input2, test_799_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.50045164096216232518798960882122628390789031982422)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_800_input2, test_800_input1, 0.771072331154144); EXPECT_LE(fabs(placementcost - (-23048.1230505285129765979945659637451171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_801_input2, test_801_input1, 0.141115526807608); EXPECT_LE(fabs(placementcost - (-4218.08421180621007806621491909027099609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_802_input2, test_802_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.705893405463289269619053811766207218170166015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_803_input2, test_803_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596469992002202076264438801445066928863525390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_804_input2, test_804_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402687168606620460309386544395238161087036132812)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_805_input2, test_805_input1, 0.253873886992423); EXPECT_LE(fabs(placementcost - (-7588.5443560905187041498720645904541015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_806_input2, test_806_input1, 0.816749284781759); EXPECT_LE(fabs(placementcost - (-24412.30365895007344079203903675079345703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_807_input2, test_807_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_808_input2, test_808_input1, 0.994029798385645); EXPECT_LE(fabs(placementcost - (-29712.54470354531076736748218536376953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_809_input2, test_809_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_810_input2, test_810_input1, 0); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_811_input2, test_811_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-25.830179445656227699146256782114505767822265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_812_input2, test_812_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-46.61472980587073067226810962893068790435791015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_813_input2, test_813_input1, 1.2545582282292328538337092269649986064905533567071e-05); EXPECT_LE(fabs(placementcost - (-0.37499999999999994448884876874217297881841659545898)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_814_input2, test_814_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-24.49954746786188053420119103975594043731689453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_815_input2, test_815_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.6940774501313313749051303602755069732666015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_816_input2, test_816_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_817_input2, test_817_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_818_input2, test_818_input1, 0.697624192339358); EXPECT_LE(fabs(placementcost - (-20831.1218218848152901045978069305419921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_819_input2, test_819_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_820_input2, test_820_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_821_input2, test_821_input1, 0.412053667925552); EXPECT_LE(fabs(placementcost - (-12316.696187962674230220727622509002685546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_822_input2, test_822_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.08799475444244109212377225048840045928955078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_823_input2, test_823_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_824_input2, test_824_input1, 0.857095791985056); EXPECT_LE(fabs(placementcost - (-25619.450318225310184061527252197265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_825_input2, test_825_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_826_input2, test_826_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_827_input2, test_827_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_828_input2, test_828_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_829_input2, test_829_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40285444303705020274719572626054286956787109375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_830_input2, test_830_input1, 0.201291070158654); EXPECT_LE(fabs(placementcost - (-6018.9746547360964541439898312091827392578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_831_input2, test_831_input1, 0.451602055481083); EXPECT_LE(fabs(placementcost - (-13451.05438046596464118920266628265380859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_832_input2, test_832_input1, 3.1363955705730821345842730674124965162263833917677e-06); EXPECT_LE(fabs(placementcost - (-0.093749999999999986122212192185543244704604148864746)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_833_input2, test_833_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_834_input2, test_834_input1, 0.116006673273397); EXPECT_LE(fabs(placementcost - (-3473.7128904952478478662669658660888671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_835_input2, test_835_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.2080280509337768535260693170130252838134765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_836_input2, test_836_input1, 0.00010036465825833862830669673815719988851924426853657); EXPECT_LE(fabs(placementcost - (-23.607213023066609736133614205755293369293212890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_837_input2, test_837_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596637266432631818702247983310371637344360351562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_838_input2, test_838_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_839_input2, test_839_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_840_input2, test_840_input1, 0.328447706824758); EXPECT_LE(fabs(placementcost - (-9817.630404698838901822455227375030517578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_841_input2, test_841_input1, 0.292905859780674); EXPECT_LE(fabs(placementcost - (-8749.0813010784258949570357799530029296875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_842_input2, test_842_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_843_input2, test_843_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-16.016921208971002243970360723324120044708251953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_844_input2, test_844_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_845_input2, test_845_input1, 0.579684481066491); EXPECT_LE(fabs(placementcost - (-17323.100692525200429372489452362060546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_846_input2, test_846_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1.0004683684052053660451520045171491801738739013672)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_847_input2, test_847_input1, 0.680837359338801); EXPECT_LE(fabs(placementcost - (-20277.50044258508933125995099544525146484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_848_input2, test_848_input1, 0.168054246441867); EXPECT_LE(fabs(placementcost - (-5022.1582592241220481810159981250762939453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_849_input2, test_849_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99815998126526361833299461068236269056797027587891)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_850_input2, test_850_input1, 0.862527103864262); EXPECT_LE(fabs(placementcost - (-25752.8570521613219170831143856048583984375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_851_input2, test_851_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.693742901270471890029511996544897556304931640625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_852_input2, test_852_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.69059814197837710025851265527307987213134765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_853_input2, test_853_input1, 0.699455606806456); EXPECT_LE(fabs(placementcost - (-20827.746757901957607828080654144287109375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_854_input2, test_854_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-15.465878162748277091509407910052686929702758789062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_855_input2, test_855_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-1.9999999999999995559107901499373838305473327636719)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_856_input2, test_856_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403389721214429286533231788780540227890014648438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_857_input2, test_857_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-36.79063107934874921056689345277845859527587890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_858_input2, test_858_input1, 0.183959723649664); EXPECT_LE(fabs(placementcost - (-5498.7400996121068601496517658233642578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_859_input2, test_859_input1, 0.805784261821402); EXPECT_LE(fabs(placementcost - (-24067.67309934602235443890094757080078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_860_input2, test_860_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_861_input2, test_861_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.708369067033661536925137625075876712799072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_862_input2, test_862_input1, 0.0997408313781609); EXPECT_LE(fabs(placementcost - (-2953.47363743466485175304114818572998046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_863_input2, test_863_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_864_input2, test_864_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_865_input2, test_865_input1, 3.7636746846876989003143065826151314468006603419781e-05); EXPECT_LE(fabs(placementcost - (-1.125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_866_input2, test_866_input1, 0.264215163997582); EXPECT_LE(fabs(placementcost - (-7897.655467051723462645895779132843017578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_867_input2, test_867_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.404393367797011293873765680473297834396362304688)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_868_input2, test_868_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_869_input2, test_869_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595717257065263794402198982425034046173095703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_870_input2, test_870_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_871_input2, test_871_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_872_input2, test_872_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_873_input2, test_873_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_874_input2, test_874_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4028209881509638989882660098373889923095703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_875_input2, test_875_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_876_input2, test_876_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.811429671594826373848263756372034549713134765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_877_input2, test_877_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403891544505720290203498734626919031143188476562)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_878_input2, test_878_input1, 0.168908131625547); EXPECT_LE(fabs(placementcost - (-5044.077181167895105318166315555572509765625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_879_input2, test_879_input1, 0.791327309584459); EXPECT_LE(fabs(placementcost - (-23606.5318223542926716618239879608154296875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_880_input2, test_880_input1, 0.824551756659963); EXPECT_LE(fabs(placementcost - (-24647.1435342205295455642044544219970703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_881_input2, test_881_input1, 0.569624974749586); EXPECT_LE(fabs(placementcost - (-17028.84364901516164536587893962860107421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_882_input2, test_882_input1, 0.00020072931651667725661339347631439977703848853707314); EXPECT_LE(fabs(placementcost - (-15.607950214516902676109566527884453535079956054688)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_883_input2, test_883_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_884_input2, test_884_input1, 0.617940874949102); EXPECT_LE(fabs(placementcost - (-18405.43920555700242402963340282440185546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_885_input2, test_885_input1, 0.0321918402805726); EXPECT_LE(fabs(placementcost - (-965.7508134922658200594014488160610198974609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_886_input2, test_886_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.596687448761761274340642557945102453231811523438)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_887_input2, test_887_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403155537011825160220723773818463087081909179688)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_888_input2, test_888_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.80741508526449479177244938910007476806640625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_889_input2, test_889_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.419347615182037003478399128653109073638916015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_890_input2, test_890_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.403423176100515590292161505203694105148315429688)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_891_input2, test_891_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.70990799179362085169486817903816699981689453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_892_input2, test_892_input1, 0.532032138768501); EXPECT_LE(fabs(placementcost - (-15902.972659929262590594589710235595703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_893_input2, test_893_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.402687168606620460309386544395238161087036132812)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_894_input2, test_894_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99999999999999977795539507496869191527366638183594)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_895_input2, test_895_input1, 0.29085126898435); EXPECT_LE(fabs(placementcost - (-8681.335422027288586832582950592041015625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_896_input2, test_896_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_897_input2, test_897_input1, 0.607663104332102); EXPECT_LE(fabs(placementcost - (-18163.65785159086226485669612884521484375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_898_input2, test_898_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99635341741661342940261647527222521603107452392578)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_899_input2, test_899_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.804136506428054786965731182135641574859619140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_900_input2, test_900_input1, 0.794680511153551); EXPECT_LE(fabs(placementcost - (-23745.06555293193014222197234630584716796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_901_input2, test_901_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-33.38054385611980734438475337810814380645751953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_902_input2, test_902_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.693575626840040371234863414429128170013427734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_903_input2, test_903_input1, 0.115296227247357); EXPECT_LE(fabs(placementcost - (-3455.780797054461800144053995609283447265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_904_input2, test_904_input1, 0.656947225018174); EXPECT_LE(fabs(placementcost - (-19630.44560275023468420840799808502197265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_905_input2, test_905_input1, 0.626344308441239); EXPECT_LE(fabs(placementcost - (-18654.7263170228034141473472118377685546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_906_input2, test_906_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.963878201138196999409046838991343975067138671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_907_input2, test_907_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.708435976805832368086157657671719789505004882812)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_908_input2, test_908_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.59703872506566568745256518013775348663330078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_909_input2, test_909_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_910_input2, test_910_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.693742901270471890029511996544897556304931640625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_911_input2, test_911_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_912_input2, test_912_input1, 0.00795630328743802); EXPECT_LE(fabs(placementcost - (-237.82186156480992167416843585669994354248046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_913_input2, test_913_input1, 0.652975143982759); EXPECT_LE(fabs(placementcost - (-19495.88253339568836963735520839691162109375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_914_input2, test_914_input1, 0.98413158989611); EXPECT_LE(fabs(placementcost - (-29415.82369835480858455412089824676513671875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_915_input2, test_915_input1, 0.523550472089546); EXPECT_LE(fabs(placementcost - (-15593.60234342797775752842426300048828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_916_input2, test_916_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.41151917183788810916666989214718341827392578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_917_input2, test_917_input1, 0.467036597869643); EXPECT_LE(fabs(placementcost - (-13956.906154215650531114079058170318603515625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_918_input2, test_918_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_919_input2, test_919_input1, 0.00013381954434445151344394708825547013475443236529827); EXPECT_LE(fabs(placementcost - (-14.017731002930172934384245309047400951385498046875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_920_input2, test_920_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-13.040411726106691858717567811254411935806274414062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_921_input2, test_921_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-5.2963155488708340001835495058912783861160278320312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_922_input2, test_922_input1, 0.753764930268369); EXPECT_LE(fabs(placementcost - (-22489.10000082009719335474073886871337890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_923_input2, test_923_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.08799475444244109212377225048840045928955078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_924_input2, test_924_input1, 0.954972538753007); EXPECT_LE(fabs(placementcost - (-28545.08415586613045888952910900115966796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_925_input2, test_925_input1, 0.112365301803569); EXPECT_LE(fabs(placementcost - (-3355.70339169014505387167446315288543701171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_926_input2, test_926_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.418611607688145426209302968345582485198974609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_927_input2, test_927_input1, 0.29524814638343); EXPECT_LE(fabs(placementcost - (-8826.561990341861019260250031948089599609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_928_input2, test_928_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40285444303705020274719572626054286956787109375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_929_input2, test_929_input1, 0); EXPECT_LE(fabs(placementcost - (-2.0163423261946209485984127240953966975212097167969)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_930_input2, test_930_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-23.42138836323329087463207542896270751953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_931_input2, test_931_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.4028209881509638989882660098373889923095703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_932_input2, test_932_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-23.807783089011440580406997469253838062286376953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_933_input2, test_933_input1, 0.447200363376039); EXPECT_LE(fabs(placementcost - (-13155.636767572184908203780651092529296875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_934_input2, test_934_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_935_input2, test_935_input1, 0.116406078107284); EXPECT_LE(fabs(placementcost - (-3482.6626251784791747923009097576141357421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_936_input2, test_936_input1, 0.132010460046942); EXPECT_LE(fabs(placementcost - (-3937.51847300877898305770941078662872314453125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_937_input2, test_937_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-13.37593441236132463245667167939245700836181640625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_938_input2, test_938_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-0.99635341741661342940261647527222521603107452392578)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_939_input2, test_939_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.0645856101963460105253034271299839019775390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_940_input2, test_940_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-10.99041102306279782396813970990478992462158203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_941_input2, test_941_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_942_input2, test_942_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_943_input2, test_943_input1, 0.163531959537002); EXPECT_LE(fabs(placementcost - (-4883.1936275879916138364933431148529052734375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_944_input2, test_944_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-85.178869616826631272488157264888286590576171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_945_input2, test_945_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.7988507217437046392660704441368579864501953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_946_input2, test_946_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-14.089667500487825790855822560843080282211303710938)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_947_input2, test_947_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_948_input2, test_948_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-36.32094186680193814709127764217555522918701171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_949_input2, test_949_input1, 0.358697040877391); EXPECT_LE(fabs(placementcost - (-10721.426259012680020532570779323577880859375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_950_input2, test_950_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-109.105436346292577809435897506773471832275390625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_951_input2, test_951_input1, 0.693694743099799); EXPECT_LE(fabs(placementcost - (-20402.48692751562703051604330539703369140625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_952_input2, test_952_input1, 0.810560658336951); EXPECT_LE(fabs(placementcost - (-24230.295303267703275196254253387451171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_953_input2, test_953_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-49.0128198485908086468043620698153972625732421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_954_input2, test_954_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-24.694060722688288223025665502063930034637451171875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_955_input2, test_955_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.787453757092688277907654992304742336273193359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_956_input2, test_956_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_957_input2, test_957_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-24.4944957800628770883122342638671398162841796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_958_input2, test_958_input1, 0.307484347534538); EXPECT_LE(fabs(placementcost - (-9046.440610368676061625592410564422607421875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_959_input2, test_959_input1, 0.954792432343598); EXPECT_LE(fabs(placementcost - (-28430.85425789533110219053924083709716796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_960_input2, test_960_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-25.829510347934505176681341254152357578277587890625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_961_input2, test_961_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.404895191088304073900872026570141315460205078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_962_input2, test_962_input1, 8.3637215215282195902466930159668834221520228311419e-06); EXPECT_LE(fabs(placementcost - (-10.84622317968278792932323995046317577362060546875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_963_input2, test_963_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-1.2145956102451258562524571971152909100055694580078)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_964_input2, test_964_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.590765933924519259790031355805695056915283203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_965_input2, test_965_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-16.210606639452908694920552079565823078155517578125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_966_input2, test_966_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.592003764709705393443073262460529804229736328125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_967_input2, test_967_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-14.877488879325898807337580365128815174102783203125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_968_input2, test_968_input1, 0.399555192450794); EXPECT_LE(fabs(placementcost - (-11927.566104110877859056927263736724853515625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_969_input2, test_969_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40559774369611290012471727095544338226318359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_970_input2, test_970_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_971_input2, test_971_input1, 0.198442566275231); EXPECT_LE(fabs(placementcost - (-5924.1059310144701157696545124053955078125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_972_input2, test_972_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.397100202630239706991233106236904859542846679688)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_973_input2, test_973_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-37.4828526747891572767912293784320354461669921875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_974_input2, test_974_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_975_input2, test_975_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_976_input2, test_976_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595232161217015942611396894790232181549072265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_977_input2, test_977_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_978_input2, test_978_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_979_input2, test_979_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.400244961922334496762232447508722543716430664062)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_980_input2, test_980_input1, 0.338049300368244); EXPECT_LE(fabs(placementcost - (-10069.629390090396555024199187755584716796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_981_input2, test_981_input1, 0.431736508784507); EXPECT_LE(fabs(placementcost - (-12898.130039955880420166067779064178466796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_982_input2, test_982_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-35.206990949465108542426605708897113800048828125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_983_input2, test_983_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_984_input2, test_984_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49817670870830671470130823763611260801553726196289)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_985_input2, test_985_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-12.595784166837436401920058415271341800689697265625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_986_input2, test_986_input1, -1); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_987_input2, test_987_input1, -1); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_988_input2, test_988_input1, 0.228200711052376); EXPECT_LE(fabs(placementcost - (-6798.621517865120040369220077991485595703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_989_input2, test_989_input1, 0.725962705479631); EXPECT_LE(fabs(placementcost - (-21621.31420081290343659929931163787841796875)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_990_input2, test_990_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.401382428049261719138485204894095659255981445312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_991_input2, test_991_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-13.789661779574371891499140474479645490646362304688)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_992_input2, test_992_input1, 0.352444161671686); EXPECT_LE(fabs(placementcost - (-10498.28105410903299343772232532501220703125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_993_input2, test_993_input1, 0); EXPECT_LE(fabs(placementcost - (-1.7976931348623157081452742373170435679807056752584e+308)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_994_input2, test_994_input1, 0.0850965541627781); EXPECT_LE(fabs(placementcost - (-2537.82306054620994473225437104701995849609375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_995_input2, test_995_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-12.40278753326487759522933629341423511505126953125)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_996_input2, test_996_input1, 0.410709726341605); EXPECT_LE(fabs(placementcost - (-12278.102201215189779759384691715240478515625)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_997_input2, test_997_input1, 0); EXPECT_LE(fabs(placementcost - (0)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_998_input2, test_998_input1, 6.6909772172225756721973544127735067377216182649136e-05); EXPECT_LE(fabs(placementcost - (-12.703417743892915225956130598206073045730590820312)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_999_input2, test_999_input1, 3.3454886086112878360986772063867533688608091324568e-05); EXPECT_LE(fabs(placementcost - (-2.28196722001174379101939848624169826507568359375)), 1e-50);
    placementcost = tree.calculateSamplePlacementCost(cumulative_rate, test_1000_input2, test_1000_input1, 1.6727443043056439180493386031933766844304045662284e-05); EXPECT_LE(fabs(placementcost - (-0.49999999999999988897769753748434595763683319091797)), 1e-50);
}
